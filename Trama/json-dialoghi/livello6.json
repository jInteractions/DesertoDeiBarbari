{
  "nomeLivello": "La telecamera",
  "numeroLivello": 6,
  "costoAiuti": 12000,

  "dialogoIniziale":
  [
    {"nome": "Prosdocimo",
    "testo": "Il generale non si &#xE8; fatto vedere nemmeno stamattina? Eh eh eh..."},
    {"nome": "Simeoni",
    "testo": "Purtroppo no, caro Prosdocimo. Stavo pensando infatti che senza ordini sono un po&#x27; limitato..."},
    {"nome": "Prosdocimo",
    "testo": "Beh potrei aver sentito qualcosa davanti alla macchinetta del caff&#xE8;, oggi a pranzo..."},
    {"nome": "Simeoni",
    "testo": "Smettila con i tuoi giochetti e parla."},
    {"nome": "Prosdocimo",
    "testo": "I nuovi tecnici, che stanno lentamente imparando il JS, hanno un nuovo sistema, ovviamente sperimentale, che permetterebbe di avere un unico pulsante di sparo. Questo garantirebbe una difesa planetaria migliore, sicuramente."},
    {"nome": "Simeoni",
    "testo": "Ma i tre pulsanti sono direttamente collegati alle torrette, associati uno ad uno. Come &#xE8; possibile utilizzare un solo pulsante? Quale torretta sparerebbe?"},
    {"nome": "Prosdocimo",
    "testo": "&#xC8; qui che viene il bello: hanno inventato un sistema per scegliere automaticamente la torretta, prendendo quella pi&#xF9; vicina al bersaglio dello sparo. Mi spiego meglio: prima, come hai ben detto, ogni pulsante era direttamente collegato ad una torretta. Con il nuovo sistema si utilizza il click del mouse per dare il comando di sparo, che viene preso da un filtro. Questo filtro, tramite l&#x27;algoritmo che hanno scritto questi tecnici, decide quale sia la torretta migliore per effettuare lo sparo e manda il comando di sparo ad essa. Capito?"},
    {"nome": "Simeoni",
    "testo": "Pi&#xF9; o meno... in pratica cliccando con il mouse che uso per muovere il mirino, attivo un meccanismo di sparo che seleziona la torretta migliore."},
    {"nome": "Prosdocimo",
    "testo": "Esattamente. Si tratta di andare a modificare la parte di codice che si occupa del meccanismo di sparo. E pensare che si sono ispirati alla macchinetta del caff&#xE8;, eh eh eh..."},
    {"nome": "Simeoni",
    "testo": "Ottimo. Ho solo una domanda. Esistono questi tecnici? C&#x27;&#xE8; davvero qualcuno che sta imparando il JS?"},
    {"nome": "Prosdocimo",
    "testo": "&#xC8; davvero cos&#xEC; importante? Eh eh eh..."}
  ],
  
  "dialogoFinale":
  [
    {"nome": "Ortiz",
    "testo": "... purtroppo &#xE8; cos&#xEC;. Non posso fare di meglio. I ficcanaso sono ovunque, e il nostro piano dovr&#xE0; subire un leggero cambiamento. Non &#xE8; colpa mia!"},
    {"nome": "Simeoni",
    "testo": "Maggiore Simeoni a rapporto, signore."},
    {"nome": "Ortiz",
    "testo": "Non ti hanno insegnato a bussare??"},
    {"nome": "Simeoni",
    "testo": "Chiedo scusa signore. Ma con chi stavate parlando? Era un discorso decisamente sospetto..."},
    {"nome": "Ortiz",
    "testo": "Niente scuse Simeoni. E per quanto riguarda i miei discorsi, sei in arresto."},
    {"nome": "Simeoni",
    "testo": "Non puoi farlo! Con chi sei in combutta? Con il Nemico?"},
    {"nome": "Ortiz",
    "testo": "Sciocchezze. Tu sei in combutta con gli Ibridi."},
    {"nome": "Simeoni",
    "testo": "Ah! Allora ho ragione! Ibridi &#xE8; una parola che pochi conoscono qui... traditore!"},
    {"nome": "Ortiz",
    "testo": "Non ti permetto di parlarmi in questo modo! E smettila di urlare. Ho qua delle bellissime prove sul tuo tradimento. Pensi che non ci siano delle telecamere nelle celle? Ho una ripresa fantastica del giovane maggiore Simeoni che parla con la prigioniera Zurlin... purtroppo manca l&#x27;audio, ma sar&#xE0; facile far credere alla corte marziale che sei un rinnegato."},
    {"nome": "Simeoni",
    "testo": "Ma &#xE8; una bugia... io e Zurlin abbiamo parlato d&#x27;altro."},
    {"nome": "Ortiz",
    "testo": "Ah, ne sono certo. Ma ha poca rilevanza... ci&#xF2; che importa &#xE8; la parola della corte marziale. Pensi che crederanno al giovane maggiore, mentalmente distrutto dalla guerra o a un generale che per anni ha pattugliato il deserto dei Barbari?"},
    {"nome": "Simeoni",
    "testo": "Maledetto..."},
    {"nome": "Ortiz",
    "testo": "Hai provato ad entrare in gioco pi&#xF9; grosso di te, Simeoni. Ora... guardie! Portatelo via!"},
    {"nome": "Simeoni",
    "testo": "Questa mano l&#x27;hai vinta tu Ortiz. Ma non finisce qui."}
  ],
  
  "manuale": "<b>Chiamata di funzione<\/b><br>\nSi prenda una funzione di prova, come la seguente:\n<pre><code>\nvar calcolaSomma = function ( a, b ) {\n&#x9;return a + b;\n}\n<\/code><\/pre>\nPer effetuare una chiamata a tale funzione, &#xE8; necessario creare una variabile che contenga il risultato dell&#x27;operazione, e inserire tra le parentesi i valori che nella funzione diventeranno <tt>a<\/tt> e <tt>b<\/tt>:\n<pre><code>var risultatoSomma = calcolaSomma( 4, 5 );\n<\/code><\/pre>\nNella variabile <tt>risultatoSomma<\/tt> ora c&#x27;&#xE8; il numero 9.<br>\n<b>Area di sparo<\/b><br>\nL&#x27;area di sparo &#xE8; un piano cartesiano: le coordinate vengono dunque espresse in termini di <i>x<\/i> e <i>y<\/i>, che indicano la posizione di un punto all&#x27;interno di quest&#x27;area.<br>\nIl mirino ha dunque una <i>x<\/i> ed una <i>y<\/i>, che indicano precisamente dove si trova in quel momento il puntatore collegato al mouse.",

  "codiceLivello": "function Livello6 ( callbackFineLivello ) {\n  CoreLevel.call( this, callbackFineLivello );\n}\n\nLivello6.prototype = Object.create( CoreLevel.prototype );\nLivello6.prototype.constructor = Livello6;\n\nLivello6.prototype.inizializzaArmiNemiche = function () {\n  var areaPertenza = this.coreGame.canvas.width;\n  var ritardoMassimo = 800 * (this.numeroOndata * 0.05);\n  var velMin = 1.3 + this.numeroOndata * 0.08;\n  var velMax = 1.4 + this.numeroOndata * 0.08;\n  var numeroMissili = 15 + Math.floor( this.numeroOndata );\n  var numeroMissiliSdoppiabili = rand( 0, numeroMissili );\n  var ritardoRand;\n  var bersagli = this.coreGame.bersagliAttaccabili();\n  \n  for( var i = 0; i < numeroMissili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemico( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand,  ritardoRand, this.coreGame) );\n  }\n  \n  for( var i = 0; i < numeroMissiliSdoppiabili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemicoDoppio( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand, ritardoRand, 3, this.coreGame) );\n  }\n}\n\nLivello6.prototype.calcolaCoefficienteOndata = function ( ) {\n  return this.numeroOndata * 1.2;\n}\n\nLivello6.prototype.setupListeners = function( ) { \n  var mySelf = this;\n  $( '.gameContainer' ).off();\n  $( '.gameContainer' ).focus();\n  \n  \/*\n  $( '.gameContainer' ).bind( 'keyup', function( event ) {\n    mySelf.sparo( mySelf.coreGame.mirino.x, mySelf.coreGame.mirino.y, event.which );\n  });\n  *\/\n  azionamentoComandiPlancia( '.gameContainer', this.coreGame.batterieAntimissile,     this.coreGame.mirino, mySelf );\n  \n  $( '.gameContainer' ).on( 'mouseover', function( event ) {\n    mySelf.coreGame.mirino.stato = Mirino.TRACCIAMENTO;\n  });\n  $( '.gameContainer' ).on( 'mouseout', function( ) {\n    mySelf.coreGame.mirino.stato = Mirino.SPENTO;\n  });\n  $( '.gameContainer' ).on( 'mousemove', function( event ) {\n    var offset = $(\".gameContainer\").offset();\n    mySelf.coreGame.mirino.inseguiX = event.pageX - offset.left;\n    mySelf.coreGame.mirino.inseguiY = event.pageY - offset.top;\n    mySelf.coreGame.mirino.cambiaMira();\n  });\n}\n\nLivello6.prototype.scegliTorretta = function ( x, y, tasto ) {\n  var indiceTorretta = 0;\n  switch(tasto) {\n    case 49: indiceTorretta = 0; break;\n    case 50: indiceTorretta = 1; break;\n    case 51: indiceTorretta = 2; break;\n    default: return -1;\n  }\n  \n  var torrettaAttuale = this.coreGame.batterieAntimissile[ indiceTorretta ];\n  \n  if ( torrettaAttuale.stato === BatteriaAntimissile.ATTIVA \n      && torrettaAttuale.numeroMissili > 0 \n      && torrettaAttuale.blocco === false )  \n    return indiceTorretta;\n  \n  return -1;\n};\n\nLivello6.prototype.sparo = function ( x, y, torretta ) {\n  if( torretta === undefined )\n    return;\n  \n  this.coreGame.missiliTerrestri.push( new MissileTerrestre( {\n    xDiPartenza: torretta.x,\n    yDiPartenza: torretta.y,\n    xDiArrivo: x,\n    yDiArrivo: y,\n    coloreTestata: 'yellow',\n    coloreScia: 'blue',\n    massimoRaggioEsplosione: 30,\n    distanzaPerFrame: 7\n  }, this.coreGame ) );\n  \n  this.coreGame.aggiornaPunteggioMissiliSparati();\n  torretta.numeroMissili--;\n  torretta.temperatura += 50;\n  var temperaturaMinima = 500\n  torretta.temperaturaSblocco = temperaturaMinima;\n  if( torretta.temperatura >= 799 ) {\n    torretta.blocco = true;\n  };\n}\n\nLivello6.prototype.mostraSchermataIniziale = function ( punteggio ) {\n  var mySelf = this;\n  mySelf.coreGame.disegnaStatoGioco();\n  mySelf.coreGame.disegnaBatterieAntimissile();\n  var ctx = mySelf.ctx;\n  \n  this.intervalloSchermata = setInterval( function () {\n    mySelf.coreGame.disegnaStatoGioco();\n    mySelf.coreGame.disegnaBatterieAntimissile();\n    if( mySelf.numeroSchermata === 0 ) {\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( \"Punteggio: \" + punteggio, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 120 );\n      ctx.textAlign = \"start\";\n      \n      ctx.fillStyle = mySelf.coreGame.coloreTestoPrimario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( 'CLICK PER INIZIARE A GIOCARE', \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 50 );\n      ctx.textAlign = \"start\";\n      \n      \/\/ parte fissa\n      ctx.textAlign = \"center\";\n      ctx.font = 'bold 20px arial';\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText( 'Ondata ' + mySelf.numeroOndata, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 + 20 - 50);\n      ctx.textAlign = \"start\";\n      var img = document.getElementById(\"source-mouse-click\");\n      ctx.drawImage(img, \n                    mySelf.canvas.width\/2 - 100, mySelf.canvas.height\/2 + 40, 30, 80);\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText(\"Fare click sinistro\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40);\n      ctx.fillText(\"per sparare\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40 + 20);\n      ctx.textAlign = \"start\";\n    } else {\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( \"Punteggio: \" + punteggio, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 120 );\n      ctx.textAlign = \"start\";\n      \n      ctx.textAlign = \"center\";\n      ctx.font = 'bold 20px arial';\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText( 'Ondata ' + mySelf.numeroOndata, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 + 20 - 50);\n      ctx.textAlign = \"start\";\n      var img = document.getElementById(\"source-mouse-click\");\n      ctx.drawImage(img, \n                    mySelf.canvas.width\/2 - 100, mySelf.canvas.height\/2 + 40, 30, 80);\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText(\"Fare click sinistro\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40);\n      ctx.fillText(\"per sparare\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40 + 20);\n      ctx.textAlign = \"start\";    \n    }\n    mySelf.numeroSchermata = (mySelf.numeroSchermata + 1) % 2;\n  }, 500 );\n  \n  $( '.gameContainer' ).off();\n  $( '.gameContainer' ).one( 'click', function() {\n    clearInterval( mySelf.intervalloSchermata );\n    mySelf.preparazioneAvvio();\n  } );                     \n}\n\nvar _x;\nvar _y;\nvar _tSelezionata;\n\nfunction _SistemaFinto () { }\n_SistemaFinto.prototype.sparo = function ( x, y, torrettaSelezionata ) {\n  this._x = x;\n  this._y = y;\n  this._tSelezionata = torrettaSelezionata;\n}\n\nvar azionaComandoSparo = function ( torrettaSelezionata, sistema, x, y ) {\n  sistema.sparo( x, y, torrettaSelezionata );\n}",
  
  "fileVirtuali":
  [
    { "nomeFile": "MacchinettaCaffe.js", 
      "consultazione": true,
      "codice": "\/**********\nFunzione che abilita il click del mouse per azionare la macchinetta del caff\u00e8.\nQuesta funzione potrebbe essere d'ispirazione per altri scopi...\n**********\/\nvar azionaMacchinaCaffeConClick = function ( pulsantieraMacchinaCaffe ) {\n  \/\/ Comandi plancia azionati da click del mouse, notare il 'click'\n  $( pulsantieraMacchinaCaffe ).bind( 'click', function ( eventoClick ) {\n    \/\/ Questa parte di codice si attiva quando si clicca\n    macchinaCaffe.faiIlCaffe();\n  } );\n}"
    },
    { "nomeFile": "TrovaTorrettaMigliore.js",
    "consultazione": true,
    "codice": "\/**********\nFunzione che date le coordinate del bersaglio determina la torretta migliore, e funzionante,\nper colpire il bersaglio.\n\nQuesta funzione prende come parametri:\n  - torretta: un array di torrette;\n  - x: un intero che rappresenta la coordinata x;\n  - y: un intero che rappresenta la coordinata y;\nQuesta funzione restituisce la torretta migliore.\n**********\/\nvar torrettaPiuVicina = function ( torrette, x, y ) {\n  \/** Funzione che restituisce true (vero) o false (falso)\n  nel caso in cui la torretta sia o meno funzionante. *\/\n  var torrettaNonFunzionante = function ( torretta ) {\n    if( torretta.stato === BatteriaAntimissile.ATTIVA &&\n        torretta.numeroMissili > 0 &&\n        torretta.blocco === false )\n      return false;\n    else\n      return true;\n  } \n  \n  var torrettaSelezionata;\n  if( 0 <= x && x < 170 ) {\n    torrettaSelezionata = torrette[0];\n  }\n  if( 170 <= x && x < 340 ) {\n    torrettaSelezionata = torrette[1];\n  }\n  if( 340 <= x && x <= 510 ) {\n    torrettaSelezionata = torrette[2];\n  }\n  \n  if( torrettaNonFunzionante(torrettaSelezionata) )\n    torrettaSelezionata = torrette[1];\n  if( torrettaNonFunzionante(torrettaSelezionata) )\n    torrettaSelezionata = torrette[0];\n  if( torrettaNonFunzionante(torrettaSelezionata) )\n    torrettaSelezionata = torrette[2];\n  \n  return torrettaSelezionata;\n}" },
    {"nomeFile": "AzionamentiPlanciaComandi.js",
    "consultazione": false,
    "codice": "\/**********\nFunzione che abilita i comandi della plancia. Attualmente prendo i tasti 1, 2, 3 sulla tastiera si fa fuoco con la torretta rispettivamente sinistra, centrale e destra.\nIl comando click \u00e8 abilitato ma non funzionante.\n\nLa funzione prende come parametri:\n  - planciaComandi: classe che legge i comandi attivati;\n  - torrette: array di torrette controllate;\n  - mirino: classe che rappresenta il sistema di puntamento, restituisce\n    le coordinate in cui \u00e8 attualmente tramite mirino.x() e mirino.y();\n  - sistema: \u00e8 il sistema missilistico a cui sono rivolti i comandi.\n**********\/\nvar azionamentoComandiPlancia = function ( planciaComandi, torrette, mirino, sistema ) {\n  \/\/ Comandi plancia azionati da tastiera, sostituire con click mouse ed inserire selezione automatica torretta.\n\/\/###START_MODIFICABILE###\n  $( planciaComandi ).bind( 'keyup', function ( tastoPremuto ) {\n    \/\/ Selezione coordinate a cui sparare\n    var x = mirino.x;\n    var y = mirino.y;\n  \n    \/\/ Selezione della torretta corrispondente, \"which\" significa \"quale\" in inglese\n    var torrettaSelezionata;\n    if( tastoPremuto.which === 49 ) \/\/ Pressione tasto \"1\"\n      torrettaSelezionata = torrette[0];\n    if( tastoPremuto.which === 50 ) \/\/ Pressione tasto \"2\"\n      torrettaSelezionata = torrette[1];\n    if( tastoPremuto.which === 51 ) \/\/ Pressione tasto \"3\"\n      torrettaSelezionata = torrette[2];\n    \n    \/\/ Lancio del missile\n    azionaComandoSparo( torrettaSelezionata, sistema, x, y );\n  } );\n\/\/###END_MODIFICABILE###\n}",
    "test": "(\n  function () {\n    var coloreMissili = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n    var nMissili = coloreMissili.length;\n    var nSoldati = 10;\n    var Tmin = 50;\n    var Tmax = 1000;\n    var deltaTempo = 70;\n    var deltaRaffreddamento = 3;\n    var _torrette = [];\n    \n    _torrette.push (\n      new BatteriaAntimissile ( 35, 410, nMissili, nSoldati, coloreMissili, Tmin, Tmax, deltaTempo, deltaRaffreddamento, null )\n    );\n    _torrette.push (\n      new BatteriaAntimissile ( 255, 410, nMissili, nSoldati, coloreMissili, Tmin, Tmax, deltaTempo, deltaRaffreddamento, null )\n    );\n    _torrette.push (\n      new BatteriaAntimissile ( 475, 410, nMissili, nSoldati, coloreMissili, Tmin, Tmax, deltaTempo, deltaRaffreddamento, null )\n    );\n    var _mirino = new Mirino( rand(0, 510), rand(0, 460));\n\n    var _s = new _SistemaFinto();\n    azionamentoComandiPlancia( $(\"#dummy-div\"), _torrette, _mirino, _s );\n    var t = torrettaPiuVicina ( _torrette, _mirino.x, _mirino.y );\n    $(\"#dummy-div\").click();\n    $(\"#dummy-div\").off();\n    \/\/console.log( _mirino );\n    \/\/console.log( t )\n    \/\/console.log( _s )\n    \n    var esito = true;\n    if( _s._x !== _mirino.x ) \n      esito = false;\n    if( _s._y !== _mirino.y )\n       esito = false;\n    if( _s._tSelezionata !== t) \n       esito = false;\n    \n    return esito;\n  }\n) ();",
    "descrizione": "Il codice che devi scrivere si basa su tre componenti principali:\n<li> la funzione della macchinetta del caff&#xE8;, da cui i tecnici (o Prosdocimo) hanno preso ispirazione per il nuovo meccanismo di sparo tramite click;<\/li>\n<li> la funzione <tt>torrettaPiuVicina()<\/tt>, che contiene l&#x27;algoritmo per selezionare la torretta pi&#xF9; vicina al bersaglio;<\/li>\n<li> l&#x27;attuale funzione per l&#x27;azionamento del comando di sparo, basato su pulsanti.<\/li>\nL&#x27;obiettivo &#xE8; quello di modificare il codice della funzione <tt>azionamentoComandiPlancia()<\/tt>, in modo che si possa sparare con la torretta pi&#xF9; vicina all'obiettivo utilizzando il click del mouse.<br>\nPer prima cosa si deve modificare correttamente la chiamata alla funzione <tt>bind()<\/tt>, in modo che non risponda pi&#xF9; alla pressione del pulsante ma al click del mouse.<br>\nSuccessivamente sar&#xE0; necessario utilizzare la funzione <tt>torrettaPiuVicina()<\/tt> per selezionare la torretta corretta.",
    "aiuto": "La modifica alla funzione <tt>bind()<\/tt> pu&#242; essere compiuta nel seguente modo, passando da:\n<pre><code>$( planciaComandi ).bind( 'keyup', function ( tastoPremuto )\n<\/code><\/pre>\na:\n<pre><code>$( planciaComandi ).bind( 'click', function ( eventoClick )\n<\/code><\/pre>\nSuccessivamente si devono eliminare le seguenti righe:\n<pre><code>var torrettaSelezionata;\nif( tastoPremuto.which === 49 )\n&#x9;torrettaSelezionata = torrette[0];\nif( tastoPremuto.which === 50 )\n&#x9;torrettaSelezionata = torrette[1];\nif( tastoPremuto.which === 51 )\n&#x9;torrettaSelezionata = torrette[2];\n<\/code><\/pre>\nsostituendole con:\n<pre><code>var torrettaSelezionata = torrettaPiuVicina( torrette, x, y );\n<\/code><\/pre>",
    "messaggioFallimento": "Sparo con click del mouse non implementato." }
  ]
}