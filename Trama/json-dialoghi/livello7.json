{
  "nomeLivello": "Fiamme dal passato",
  "numeroLivello": 7,
  "costoAiuti": 14000,

  "dialogoIniziale":
  [
    {"nome": "Ortiz",
    "testo": "Come sta il mio prigioniero preferito?"},
    {"nome": "Simeoni",
    "testo": "Risparmia l&#x27;umorismo, Ortiz."},
    {"nome": "Ortiz",
    "testo": "Generale Ortiz. Almeno per oggi."},
    {"nome": "Simeoni",
    "testo": "Che significa?"},
    {"nome": "Ortiz",
    "testo": "Significa che per mantenere la mia bella faccia pulita da ogni sospetto, devo tirarti fuori da questa prigione, per oggi. Abbiamo bisogno di un tecnico informatico e, a detta dei miei uomini, sei il migliore."},
    {"nome": "Simeoni",
    "testo": "E perch&#xE9; dovrei farlo? Non ti devo nulla. Anzi, mi hai sbattuto in galera e hai tradit..."},
    {"nome": "Ortiz",
    "testo": "Taci! Devi farlo, fidati. Non vorrai che qualche vecchio inserviente scivoli durante la pulizia di un corridoio e si faccia male, spero. Inoltre c&#x27;&#xE8; quella faccenda del tuo tradimento..."},
    {"nome": "Simeoni",
    "testo": "Maledetto! Sono costretto ad ascoltarti."},
    {"nome": "Ortiz",
    "testo": "Seguimi."},
    {"nome": "Simeoni",
    "testo": "..."},
    {"nome": "Zurlin",
    "testo": "Ciao caro."},
    {"nome": "Simeoni",
    "testo": "Cosa dobbiamo fare? Un nuovo attacco ai loro sistemi informatici?"},
    {"nome": "Ortiz",
    "testo": "Magari. Purtroppo dopo l&#x27;ultima volta hanno alzato il livello di sicurezza. Non sappiamo pi&#xF9; come entrare. In ogni caso, Zurlin ha trovato una cosa."},
    {"nome": "Zurlin",
    "testo": "Il Nemico aveva sviluppato un nuovo tipo di missili, top secret."},
    {"nome": "Ortiz",
    "testo": "... e abbiamo intercettato una loro conversazione. Stanno per utilizzarli."},
    {"nome": "Zurlin",
    "testo": "Sono composti da una particolare testata in grado di sdoppiarsi. Sono riuscita a... ricordarmi come fossero fatti. Dobbiamo implementare questa tecnologia nelle torrette dell&#x27;UTF-8."},
    {"nome": "Simeoni",
    "testo": "Va bene, cominciamo."}
  ],
  
  "dialogoFinale":
  [
    {"nome": "Ortiz",
    "testo": "Riportatelo in cella."},
    {"nome": "Simeoni",
    "testo": "..."},
    {"nome": "Prosdocimo",
    "testo": "Se ne sono andati tutti?"},
    {"nome": "Simeoni",
    "testo": "Prosdocimo! Devi stare attento, &#xE8; pieno di telecamere."},
    {"nome": "Prosdocimo",
    "testo": "Lo so. Ma mentre pulivo la sala di controllo, potrebbe essermi scivolato del detersivo per pavimenti sulle prese delle telecamere, eh eh eh..."},
    {"nome": "Simeoni",
    "testo": "Ah ah ah! Sei un diavolo, Prosdocimo."},
    {"nome": "Prosdocimo",
    "testo": "Eh eh eh. Sono qua per mantenere una promessa. Forse il tempo che mi rimane in questa base &#xE8; agli sgoccioli..."},
    {"nome": "Simeoni",
    "testo": "Non essere pessimista, Prosdocimo."},
    {"nome": "Prosdocimo",
    "testo": "Sono realista, eh eh eh. Comunque, &#xE8; ora che tu sappia chi sono io."},
    {"nome": "Simeoni",
    "testo": "Sei sicuro di volermelo dire?"},
    {"nome": "Prosdocimo",
    "testo": "Sei un bravo ragazzo, Simeoni. Mi ricordi tanto un giovane tecnico giunto su Bastiani tanti anni fa. All&#x27;epoca avevo vent&#x27;anni, appena uscito dalla Scuola degli ufficiali tecnici."},
    {"nome": "Simeoni",
    "testo": "Scuola degli ufficiali tecnici? Mai sentita."},
    {"nome": "Prosdocimo",
    "testo": "Ovviamente. Non esiste pi&#xF9;, &#xE8; stata cancellata pochi anni dopo. Comunque, appena arrivato qui feci la conoscenza di Rusa, un anziano programmatore che lavorava qua. Al tempo ero gi&#xE0; un ficcanaso, eh eh eh. Rusa mi insegn&#xF2; un linguaggio ormai perduto."},
    {"nome": "Simeoni",
    "testo": "Il JS?"},
    {"nome": "Prosdocimo",
    "testo": "Ovviamente. Per questo so diverse cose e odio Ortiz eh eh eh."},
    {"nome": "Simeoni",
    "testo": "Cosa sai dirmi di lui?"},
    {"nome": "Prosdocimo",
    "testo": "Ero gi&#xE0; qua quando &#xE8; arrivato. Un giovane brillante e scavezzacollo. Torn&#xF2; da una missione segreta, che prevedeva il primo atterraggio umano al di l&#xE0; del deserto... torn&#xF2; solo lui. Raccont&#xF2; di un massacro degli uomini da parte di una razza aliena e che lui era l&#x27;unico sopravvissuto. Si prese una medaglia e una promozione. Da quel giorno non fu pi&#xF9; lo stesso per&#xF2;... Ortiz nasconde un segreto, ed intendo scoprirlo."},
    {"nome": "Simeoni",
    "testo": "Forse posso aiutarti. &#xC8; in combutta con gli Ibridi."},
    {"nome": "Prosdocimo",
    "testo": "Allora la leggenda &#xE8; vera... eh eh eh. Speravo di vivere abbastanza a lungo per accertarmene."},
    {"nome": "Simeoni",
    "testo": "Arriva qualcuno! Vattene, Prosdocimo!"},
    {"nome": "Prosdocimo",
    "testo": "Eh eh eh, non preoccuparti, ora me ne vado. Ma ne vdremo delle belle, mio giovane amico. Eh eh eh..."}
  ],
  
  "manuale": "Ogni classe pu&#xF2; essere associata ad una serie di funzioni. Per essere pi&#xF9; chiari, prendiamo la classe <tt>Arma<\/tt>:\n<pre><code>function Arma () {\n&#x9;this.numeroMunizioni = 10;\n}\n<\/code><\/pre>\nUn&#x27;arma pu&#xF2; avere diverse funzionalit&#xE0;, per esempio la ricarica e lo sparo:\n<pre><code>Arma.prototype.ricarica = function () {\n&#x9;this.numeroMunizioni = 10;\n}\nArma.prototype.spara = function () {\n&#x9;if ( this.numeroMunizioni === 0 ) {\n&#x9;&#x9;this.ricarica();\n&#x9;}\n&#x9;this.numeroMunizioni--;\n}\n<\/code><\/pre>\nQueste due funzioni sono molto semplici. La prima re-imposta il numero di munizioni al valore iniziale di 10. La seconda controlla il numero di munizioni: se &#xE8; uguale a 0, allora effettua una chiamata alla funzione <tt>ricarica()<\/tt>, poi spara; altrimenti spara, decrementando il numero di munizioni.<br>\nUna funzione propria ad una classe viene indicata con la parola chiave <b>prototype<\/b>.<br>\nOsserviamo il meccanismo, prendendo un oggetto di classe <tt>Arma<\/tt>:\n<pre><code>var cannone = new Arma();\ncannone.spara();\nvar munizioniRimaste = cannone.numeroMunizioni;\n<\/code><\/pre>\nLa variabile <tt>munizioniRimaste<\/tt> contiene il valore 9, poich&#xE9; la funzione di sparo ha determinato un decremento del <tt>numeroMunizioni<\/tt> all&#x27;interno dell&#x27;oggetto <tt>cannone<\/tt>.",

  "codiceLivello": "function Livello7 ( callbackFineLivello ) {\n  CoreLevel.call( this, callbackFineLivello );\n}\n\nLivello7.prototype = Object.create( CoreLevel.prototype );\nLivello7.prototype.constructor = Livello7;\n\nLivello7.prototype.inizializzaArmiNemiche = function () {\n  var areaPertenza = this.coreGame.canvas.width;\n  var ritardoMassimo = 900 * (this.numeroOndata * 0.05);\n  var velMin = 1.6 + this.numeroOndata * 0.1;\n  var velMax = 1.8 + this.numeroOndata * 0.1;\n  var numeroMissili = 20 + Math.floor( this.numeroOndata );\n  var numeroMissiliSdoppiabili = rand( 0, numeroMissili );\n  var ritardoRand;\n  var bersagli = this.coreGame.bersagliAttaccabili();\n  \n  for( var i = 0; i < numeroMissili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemico( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand,  ritardoRand, this.coreGame) );\n  }\n  \n  for( var i = 0; i < numeroMissiliSdoppiabili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemicoDoppio( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand, ritardoRand, 3, this.coreGame) );\n  }\n}\n\nLivello7.prototype.calcolaCoefficienteOndata = function ( ) {\n  return this.numeroOndata * 1.8;\n}\n\nLivello7.prototype.setupListeners = function ( ) { \n  var mySelf = this;\n  $( '.gameContainer' ).off();\n  $( '.gameContainer' ).focus();\n  \n  $( '.gameContainer' ).on( 'click', function ( ) {\n    mySelf.sparo( mySelf.coreGame.mirino.x, mySelf.coreGame.mirino.y, null );\n  } );\n  \n  $( '.gameContainer' ).on( 'mouseover', function( event ) {\n    mySelf.coreGame.mirino.stato = Mirino.TRACCIAMENTO;\n  });\n  $( '.gameContainer' ).on( 'mouseout', function( ) {\n    mySelf.coreGame.mirino.stato = Mirino.SPENTO;\n  });\n  $( '.gameContainer' ).on( 'mousemove', function( event ) {\n    var offset = $(\".gameContainer\").offset();\n    mySelf.coreGame.mirino.inseguiX = event.pageX - offset.left;\n    mySelf.coreGame.mirino.inseguiY = event.pageY - offset.top;\n    mySelf.coreGame.mirino.cambiaMira();\n  });\n}\n\nLivello7.prototype.scegliTorretta = function ( x, y, tasto ) {\n  var nonFunzionante = function ( torretta ) {  \n    if( torretta.stato === BatteriaAntimissile.ATTIVA &&\n        torretta.numeroMissili > 0 &&\n        torretta.blocco === false )\n      return false;\n    else\n      return true;\n  }\n  \n  var torrette = this.coreGame.batterieAntimissile;\n  var torrettaSelezionata;\n  \n  if( 0 <= x && x < 170 ) {\n    torrettaSelezionata = 0;\n  }\n  if( 170 <= x && x < 340 ) {\n    torrettaSelezionata = 1;\n  }\n  if( 340 <= x && x <= 510 ) {\n    torrettaSelezionata = 2;\n  }\n  \n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    torrettaSelezionata = 1;\n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    torrettaSelezionata = 0;\n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    torrettaSelezionata = 2;\n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    return -1;\n    \n  return torrettaSelezionata;\n};\n\nLivello7.prototype.sparo = function ( x, y, tasto ) {\n  var indiceTorretta = this.scegliTorretta( x, y, tasto );\n  if( indiceTorretta === -1 )\n    return;\n  \n  var sdoppiabili = this.esaminaMissileSdoppiabile( x, y );\n  if( sdoppiabili.missiliFrammenti.length === 0 )\n    return;\n  \n  var torretta = this.coreGame.batterieAntimissile[indiceTorretta];\n  var x1 = sdoppiabili.x1;\n  var x2 = sdoppiabili.x2;\n  var y = sdoppiabili.y;\n  var ySdoppio = sdoppiabili.ySdoppio;\n  var missiliFrammenti = sdoppiabili.missiliFrammenti;\n  \n  if( sdoppiabili.missiliFrammenti.length === 1 ) {\n    this.coreGame.missiliTerrestri.push( new MissileTerrestre( {\n      xDiPartenza: torretta.x,\n      yDiPartenza: torretta.y,\n      xDiArrivo: x1,\n      yDiArrivo: y,\n      coloreTestata: 'yellow',\n      coloreScia: 'blue',\n      massimoRaggioEsplosione: 30,\n      distanzaPerFrame: 7\n    }, this.coreGame ) );  \n  } else {\n    \n    if( missiliFrammenti.length >= 2  )\n      missiliFrammenti.slice(0, 2)\n    \n    var distanzaX = Math.abs( x - torretta.x );\n    var distanzaY = Math.abs( y - torretta.y );\n\n    this.coreGame.missiliTerrestri.push( new _MissileTerrestreDoppio( {\n      xDiPartenza: torretta.x,\n      yDiPartenza: torretta.y,\n      xDiArrivo: x,\n      yDiArrivo: y,\n      coloreTestata: 'yellow',\n      coloreScia: 'blue',\n      massimoRaggioEsplosione: 30,\n      distanzaPerFrame: 7\n    }, this.coreGame, torretta.x - distanzaX\/2, ySdoppio, missiliFrammenti.length ) );\n\n  }\n  \/\/torretta.y + distanzaY\/2\n  \n  this.coreGame.aggiornaPunteggioMissiliSparati();\n  torretta.numeroMissili--;\n  torretta.temperatura += 100;\n  var temperaturaMinima = 500\n  torretta.temperaturaSblocco = temperaturaMinima;\n  if( torretta.temperatura >= 799 ) {\n    torretta.blocco = true;\n  };\n}\n\nLivello7.prototype.esaminaMissileSdoppiabile = function ( x, y ) {\n  var missileUtente = new MissileStandard();\n  \n  var bersagli = [ { appartieneNemico: true, x: x, y: y} ];\n  var ySdoppio = missileUtente.miraBersaglio( bersagli );\n  var bersaglio = missileUtente.bersaglioAgganciato;\n  var missiliFrammenti = missileUtente.esplodi();\n    \n  if( missiliFrammenti === undefined )\n    return ( {\n      x1: undefined,\n      x2: undefined,\n      y: undefined,\n      ySdoppio: undefined,\n      missiliFrammenti: [] } );\n  \n  if( missiliFrammenti.length === 1 ) {\n    return ( {\n    x1: missiliFrammenti[0].x,\n    x2: 0,\n    y: missiliFrammenti[0].y,\n    ySdoppio: 0,\n    missiliFrammenti: missiliFrammenti } );  \n  }\n  \n  return ( {\n    x1: missiliFrammenti[0].x,\n    x2: missiliFrammenti[1].x,\n    y: missiliFrammenti[0].y,\n    ySdoppio: ySdoppio,\n    missiliFrammenti: missiliFrammenti } );\n}\n\nLivello7.prototype.mostraSchermataIniziale = function ( punteggio ) {\n  var mySelf = this;\n  mySelf.coreGame.disegnaStatoGioco();\n  mySelf.coreGame.disegnaBatterieAntimissile();\n  var ctx = mySelf.ctx;\n  \n  this.intervalloSchermata = setInterval( function () {\n    mySelf.coreGame.disegnaStatoGioco();\n    mySelf.coreGame.disegnaBatterieAntimissile();\n    if( mySelf.numeroSchermata === 0 ) {\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( \"Punteggio: \" + punteggio, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 120 );\n      ctx.textAlign = \"start\";\n      \n      ctx.fillStyle = mySelf.coreGame.coloreTestoPrimario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( 'CLICK PER INIZIARE A GIOCARE', \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 50 );\n      ctx.textAlign = \"start\";\n      \n      \/\/ parte fissa\n      ctx.textAlign = \"center\";\n      ctx.font = 'bold 20px arial';\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText( 'Ondata ' + mySelf.numeroOndata, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 + 20 - 50);\n      ctx.textAlign = \"start\";\n      var img = document.getElementById(\"source-mouse-click\");\n      ctx.drawImage(img, \n                    mySelf.canvas.width\/2 - 100, mySelf.canvas.height\/2 + 40, 30, 80);\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText(\"Fare click sinistro\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40);\n      ctx.fillText(\"per sparare\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40 + 20);\n      ctx.textAlign = \"start\";\n    } else {\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( \"Punteggio: \" + punteggio, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 120 );\n      ctx.textAlign = \"start\";\n      \n      ctx.textAlign = \"center\";\n      ctx.font = 'bold 20px arial';\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText( 'Ondata ' + mySelf.numeroOndata, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 + 20 - 50);\n      ctx.textAlign = \"start\";\n      var img = document.getElementById(\"source-mouse-click\");\n      ctx.drawImage(img, \n                    mySelf.canvas.width\/2 - 100, mySelf.canvas.height\/2 + 40, 30, 80);\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText(\"Fare click sinistro\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40);\n      ctx.fillText(\"per sparare\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40 + 20);\n      ctx.textAlign = \"start\";    \n    }\n    mySelf.numeroSchermata = (mySelf.numeroSchermata + 1) % 2;\n  }, 500 );\n  \n  $( '.gameContainer' ).off();\n  $( '.gameContainer' ).one( 'click', function() {\n    clearInterval( mySelf.intervalloSchermata );\n    mySelf.preparazioneAvvio();\n  } );                     \n}\n\nfunction _MissileTerrestreDoppio ( parametri, coreGame, xSdoppio, ySdoppio, missili ) {\n  MissileTerrestre.call( this, parametri, coreGame );\n\n  this.xSdoppio = xSdoppio;\n  this.ySdoppio = ySdoppio;\n  this.missiliFrammenti = missili;\n  \n  var distanza = Math.sqrt( Math.pow(this.xSdoppio - this.xDiPartenza, 2) + \n      Math.pow(this.ySdoppio - this.yDiPartenza, 2) );\n  \n  this.ritardoSuddivisione = Math.floor(distanza \/ parametri.distanzaPerFrame);\n  this.suddivisioneAvvenuta = false;\n}\n\n_MissileTerrestreDoppio.prototype = Object.create( MissileTerrestre.prototype );\n_MissileTerrestreDoppio.prototype.constructor = _MissileTerrestreDoppio;\n\n_MissileTerrestreDoppio.prototype.sdoppiati = function () {\n  for( var i = 0; i < this.missiliFrammenti; ++i ) {\n    this.coreGame.missiliTerrestri.push(\n      new MissileTerrestre( {\n        xDiPartenza: this.x,\n        yDiPartenza: this.y,\n        xDiArrivo: this.xDiArrivo + 40,\n        yDiArrivo: this.yDiArrivo,\n        coloreTestata: 'yellow',\n        coloreScia: 'blue',\n        massimoRaggioEsplosione: 30,\n        distanzaPerFrame: 7\n      }, this.coreGame ) );\n  }\n  this.suddivisioneAvvenuta = true;\n}\n\n_MissileTerrestreDoppio.prototype.update = function () {\n  \/\/console.log( this.ritardoSuddivisione );\n  \n  if( this.ritardoSuddivisione !== 0 )\n    this.ritardoSuddivisione--;\t\t\t\n  else {\n    if( this.suddivisioneAvvenuta === false ) {\n      this.sdoppiati();\n    }\n  }\n  \n  if( this.stato === Missile.ATTIVO && this.y <= this.yDiArrivo ) {\n    this.x = this.xDiArrivo;\n    this.y = this.yDiArrivo;\n    this.stato = Missile.ESPLOSIONE;\n  }\n  if( this.stato === Missile.ATTIVO ) {\n    this.x += this.dx;\n    this.y += this.dy;\n  } else {\n    this.esplodi();\n  }\n};\n\nfunction FrammentoMissile ( x, y ) {\n  this.x = x;\n  this.y = y;\n}",
  
  "fileVirtuali":
  [
    {"nomeFile": "MissileTestataMultipla.js",
    "consultazione": true,
    "codice": "\/**********\nCiao, caro.\nQuesto \u00e8 un esempio di come \u00e8 implementato il missile a testata multipla.\nUsalo pure per migliorare i missili standard terrestri.\nSaluti,\nZurlin\n**********\/\n\n\/\/ Classe esempio di missili sdoppiabili \nfunction MissileTestataMultipla ( ) {\n  this.obiettivoAgganciato;\n} \n\n\/\/ Funzione per identificare l'obiettivo del missile.\n\/\/ Assomiglia alla funzione miraBersaglio() del missile standard!\nMissileTestataMultipla.prototype.identificaObiettivo = function ( obiettivi ) {\n  \/\/ Esempio obiettivo = { x: 315, y: 145, tipo: \"terrestre\" }\n  for( var i = 0; i < obiettivi.length; ++i ) {\n    var obiettivo = obiettivi[i];\n    if( obiettivo.tipo === \"terrestre\" ) {\n      var x = obiettivo.x;\n      var y = obiettivo.y;\n  \n      \/\/ Vengono memorizzare le coordinate del bersaglio.\n      this.agganciaBersaglio( obiettivo );\n      \n      \/\/ Viene restituita l'altezza alla quale il missile detona e si sdoppia.\n      var altezzaEsplosione = this.calcolaAltezzaSdoppiamento( y );\n      return altezzaEsplosione;\n    }\n  }\n}\n\n\/\/ Funzione per il calcolo della quota di sdoppiamento del missile.\nMissileTestataMultipla.prototype.calcolaAltezzaSdoppiamento = function ( y ) {\n  return ( Math.abs(430 - y) \/ 2 ) + y;\n}\n\n\/\/ Funzione per agganciare l'obiettivo del missile.\nMissileTestataMultipla.prototype.agganciaObiettivo = function ( obiettivo ) {\n  this.obiettivoAgganciato = obiettivo;\n}\n\n\/\/ Funzione di detonazione del missile doppio.\n\/\/ Come puoi notare il missile si divide in due frammenti.\n\/\/ Assomiglia alla funzione esplodi() del missile standard!\nMissileTestataMultipla.prototype.detonazione = function ( ) {\n  \/\/ this.obiettivo.x + 10 e this.obiettivo.x - 10\n  \/\/ permette di indirizzare il missile in due punti diversi,\n  \/\/ uno a 10 unit\u00e0 a destra del bersaglio del missile originale\n  \/\/ ed uno a 10 unit\u00e0 a sinistra del bersaglio del missile originale.\n  var frammentoMissile1 = new FrammentoMissile( this.obiettivo.x + 10, this.obiettivo.y );\n  var frammentoMissile2 = new FrammentoMissile( this.obiettivo.x - 10, this.obiettivo.y );\n  \/\/ Variabile che contiene i frammenti del missile.\n  var frammentiMissile = [];\n  frammentiMissile.push( frammentoMissile1 );\n  frammentiMissile.push( frammentoMissile2 );\n  \n  return frammentiMissile;\n}" },
    {"nomeFile": "MissileStandard.js",
    "consultazione": false,
    "codice": "\/**********\nBenvenuto nel file di configurazione missili standard del sistema Hob-2000.\nIn questo codice \u00e8 possibile modificare diverse propriet\u00e0 dei missili, in particolare i bersagli mirati, gli obiettivi agganciati e l'esplosione.\n**********\/\n\n\/\/ Classe che identifica il missile standard terrestre.\nfunction MissileStandard ( ) { \n  this.bersaglioAgganciato;\n}\n\n\/\/ Funzione di identificazione del bersaglio\nMissileStandard.prototype.miraBersaglio = function ( listaBersagli ) {\n  \/\/ bersaglio = { appartieneNemico: true, x: 530, y: 95 }\n  \n  var numeroBersagli = listaBersagli.length;\n  var i = 0;\n  \/\/ Ciclo per la selezione dei bersagli di sparo.\n  while( i <  numeroBersagli ) {\n\/\/###START_MODIFICABILE###\n    var bersaglio = listaBersagli[i];\n    if( bersaglio.appartieneNemico === true ) {\n      var x = bersaglio.x;\n      var y = bersaglio.y;\n    \n      this.agganciaObiettivo( bersaglio );\n      \n      \/\/ Altezza a cui avviene l'esplosione.\n      var altezzaEsplosione = y;\n      return altezzaEsplosione;\n\/\/###END_MODIFICABILE###\n    }\n    ++i;\n  }\n}\n\n\/\/ Funzione di aggancio del bersaglio.\nMissileStandard.prototype.agganciaObiettivo = function ( bersaglio ) {\n  this.bersaglioAgganciato = bersaglio;\n}\n\n\/\/ Funzione di esplosione del missile standard.\nMissileStandard.prototype.esplodi = function ( ) {\n\/\/###START_MODIFICABILE###\n  var x = this.bersaglioAgganciato.x;\n  var y = this.bersaglioAgganciato.y;\n  return ( [ new FrammentoMissile( x, y ) ] );\n\/\/###END_MODIFICABILE###\n}",
    "test": "(\nfunction ( ) {\n  \n  var esito = true;\n  \n  var missileUtente = new MissileStandard();\n  x = rand(0, 200);\n  y = rand(0, 100);\n  var bersagli = [ { appartieneNemico: true, x: x, y: y} ];\n  var ySdoppio = missileUtente.miraBersaglio( bersagli );\n  var bersaglio = missileUtente.bersaglioAgganciato;\n  var missiliFrammenti = missileUtente.esplodi();\n  \n  if( missiliFrammenti.length !== 2 ) {\n    esito = false;\n  }\n  \n  $.each( missiliFrammenti, function( i, m ) {\n    if( ! m instanceof MissileNemicoFrammento )\n      esito = false;\n    \n    if( ySdoppio !== (Math.abs(430 - y) \/ 2) + y)\n      esito = false;\n    \n  } );\n\n  return esito;\n}\n) ();",
    "descrizione": "Ci sono due classi:\n<li> <tt>MissileTestataMultipla<\/tt>: missile alieno che si sdoppia;<\/li>\n<li> <tt>MissileStandard<\/tt>: missile di ordinanza terrestre.<\/li>\nL&#x27;obiettivo &#xE8; inserire la tecnologia aliena dello sdoppiamento dei missili nella nostra classe <tt>MissileStandard<\/tt>.<br>\nCome si pu&#xF2; notare, le due classi hanno una struttura comune: tra di esse l&#x27;unica differenza sta nei nomi delle caratteristiche e delle  funzioni.<br>\nPer spostare la tecnologia dalla classe <tt>MissileTestataMultipla<\/tt> &#xE8; necessario comprendere in quale punto della classe <tt>MissileStandard<\/tt> devono essere collocate le funzionalit&#xE0; di sdoppiamento, tenendo conto della somiglianza tra le due classi e dei nomi diversi.",
    "aiuto": "Come prima cosa &#xE8; necessario modificare la funzione <tt>MissileStandard.prototype.miraBersaglio()<\/tt>, coerentemente con la funzione <tt>MissileTestataMultipla.prototype.identificaObiettivo()<\/tt>. Al posto delle righe:\n<pre><code>var coordinateEsplosione = { esplosioneX: x, esplosioneY: y };\nthis.agganciaObiettivo( bersaglio );\nreturn coordinateEsplosione.esplosioneY;\n<\/code><\/pre>\nandranno inserite le seguenti righe, che permettono di calcolare l&#x27;altezza di sdoppiamento del missile:\n<pre><code>var altezza = this.calcolaAltezzaSdoppiamento( x, y );\nthis.agganciaObiettivo( bersaglio );\nreturn altezza;\n<\/code><\/pre>\nSuccessivamente sar&#xE0; necessario modificare la funzione <tt>MissileStandard.prototype.esplodi()<\/tt>, coerentemente con la funzione <tt>MissileTestataMultipla.prototype.detonazione()<\/tt>, cambiando dunque le righe:\n<pre><code>var x = this.bersaglioAgganciato.x;\nvar y = this.bersaglioAgganciato.y;\nreturn ( [ new FrammentoMissile( x, y ) ] );\n<\/code><\/pre>\ncon le righe:\n<pre><code>var frammentoMissile1 = new FrammentoMissile( this.bersaglio.x + 10, this.bersaglio.y );\nvar frammentoMissile2 = new FrammentoMissile( this.bersaglio.x - 10, this.bersaglio.y );\nvar frammentiMissile = [];\nframmentiMissile.push( frammentoMissile1 );\nframmentiMissile.push( frammentoMissile2 );\nreturn frammentiMissile;\n<\/code><\/pre>",
    "messaggioFallimento": "Il MissileStandard non si sdoppia a dovere."}
  ]
}