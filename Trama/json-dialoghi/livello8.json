{
  "nomeLivello": "Una nuova minaccia",
  "numeroLivello": 8,
  "costoAiuti": 16000,

  "dialogoIniziale":
  [
    {"nome": "Ortiz",
    "testo": "Alzati, maggiore."},
    {"nome": "Simeoni",
    "testo": "Buongiorno, generale."},
    {"nome": "Ortiz",
    "testo": "Abbiamo un nuovo compito per te, forse l&#x27;ultimo, forse no."},
    {"nome": "Simeoni",
    "testo": "Non ho molta scelta, vero?"},
    {"nome": "Ortiz",
    "testo": "Decisamente no."},
    {"nome": "Simeoni",
    "testo": "Qual &#xE8; il problema?"},
    {"nome": "Ortiz",
    "testo": "Abbiamo riorganizzato le basi al fronte. La met&#xE0; di esse sono state svuotate, in modo da poterle usare come esca per confondere il Nemico. Il problema &#xE8; che il Nemico sta intercettando le nostre comunicazioni e riesce a comprendere quali siano le basi per noi vitali e quali quelle finte."},
    {"nome": "Simeoni",
    "testo": "Comincio a capire di cosa si tratta..."},
    {"nome": "Ortiz",
    "testo": "Ogni nas e ha un canale radio, che utilizza per comunicare con il quartier generale. Il canale n&#xB0;0 viene usato dalla prima base a sinistra nello schermo, il n&#xB0;1 dalla seconda e cos&#xEC; via fino all&#x27;ultima base a destra, che utilizza il canale n&#xB0;5."},
    {"nome": "Simeoni",
    "testo": "Capito."},
    {"nome": "Ortiz",
    "testo": "Il tuo compito sar&#xE0; quello di cambiare il segnale che arriva al quartier generale, in modo tale da rendere le basi vitali come ausiliarie e viceversa, portando fuori strada il Nemico. In questo modo infatti colpir&#xE0; prima le basi ausiliari, mascherate da basi vitali."},
    {"nome": "Simeoni",
    "testo": "Chiaro. Ma come facciamo a capire chi ci sta mandando il messaggio?"},
    {"nome": "Ortiz",
    "testo": "Ottima domanda. I segnali, quando arrivano al quartier generale, devono essere interpretati correttamente. Come ben sai in informatica questa procedura si chiama codifica e decodifica."},
    {"nome": "Simeoni",
    "testo": "Esattamente. Si prende un messaggio e lo si maschera tramite una codifica. Arrivato il messaggio codificato, si applica una decodifica per leggere il messaggio originale."},
    {"nome": "Ortiz",
    "testo": "Corretto."}
  ],
  
  "dialogoFinale":
  [
    {"nome": "Ortiz",
    "testo": "Ottimo lavoro, uomini. Ora ho una comunicazione molto importante da fare."},
    {"nome": "Prosdocimo",
    "testo": "Cosa ha in mente in di fare?"},
    {"nome": "Simeoni",
    "testo": "Non lo so, ma non mi aspetto nulla di buono."},
    {"nome": "Ortiz",
    "testo": "Silenzio, laggi&#xF9; in fondo. Ho appena ricevuto un ordine dallo stato maggiore, con priorit&#xE0; 0. Il governo terrestre, grazie a persone come me, &#xE8; riuscito ad ottenere un&#x27;alleanza con gli Ibridi. Molti di voi si staranno chiedendo cosa sono gli Ibridi: ebbene, Zurlin, qui, ne &#xE8; un esempio. Dall&#x27;altra parte del deserto, molti anni fa, arrivarono navi di disperati che fuggivano dalla povert&#xE0; dei pianeti dell&#x27;orlo della galassia. Si sono fusi con la razza tronk, creando una nuova speranza per l&#x27;Universo."},
    {"nome": "Simeoni",
    "testo": "Traditore!"},
    {"nome": "Ortiz",
    "testo": "Zitto, maggiore. Avevi capito alcune cose, te lo concedo. Ma non tutto. Dall&#x27;orlo della galassia confinante, a migliaia di anni luce oltre il deserto dei Barbari, una nuova minaccia si &#xE8; affacciata. Gli Ibridi stavano fuggendo, e non non li abbiamo accolti. Credo che sia ben chiaro nella mente di tutti voi che l&#x27;accoglienza, soprattutto di chi fugge dalla guerra, sia uno dei punti fondamentali dell&#x27;umanit&#xE0;."},
    {"nome": "Prosdocimo",
    "testo": "Non ha tutti i torti, eh eh eh."},
    {"nome": "Ortiz",
    "testo": "Grazie, Prosdocimo. L&#x27;unione fa la forza, dico bene?"},
    {"nome": "Zurlin",
    "testo": "Certo, caro."},
    {"nome": "Ortiz",
    "testo": "Ed &#xE8; per questo che ora, umani e Ibridi, sono chiamati a fronteggiare tale minaccia. I Faragi, i divoratori di mondi, stanno arrivando. Tutte le unit&#xE0; dell&#x27;UTF sono state dislocate sul pianeta Angustina. Se te lo stai chiedendo, maggiore, &#xE8; il pianeta misterioso che compare nei file di configurazione."},
    {"nome": "Simeoni",
    "testo": "Questo spiega tutto..."},
    {"nome": "Ortiz",
    "testo": "Con effetto immediato ordino la mobilitazione del quartier generale dell&#x27;UTF-8 da Bastiani ad Angustina. Solo un&#x27;ultima cosa... maggiore, da che parte stai?"},
    {"nome": "Simeoni",
    "testo": "Ammetto di essermi sbagliato. Tutto quello che ho visto e sentito... puzzava di tradimento. Ora che dici queste cose, ho molti dubbi a riguardo."},
    {"nome": "Zurlin",
    "testo": "Posso intervenire, caro? Simeoni, ti avevo detto che mi dovevi un favore. Bene, te lo chiedo ora. Credici. La minaccia che sta arrivando &#xE8; maggiore di quello che ti aspetti."},
    {"nome": "Simeoni",
    "testo": "Mmmmh... d&#x27;accordo, vi credo. Spero di non pentirmene."},
    {"nome": "Ortiz",
    "testo": "Allora &#xE8; deciso. Slegate il colonnello Simeoni."},
    {"nome": "Simeoni",
    "testo": "Colonnello?"},
    {"nome": "Ortiz",
    "testo": "Ovviamente. Hai dimostrato grande coraggio a sfidarmi. E l&#x27;hai fatto per il bene della Terra. La promozione &#xE8; meritata. Ora, preparatevi per la partenza."},
    {"nome": "Prosdocimo",
    "testo": "Ehm ehm!"},
    {"nome": "Ortiz",
    "testo": "Prosdocimo... hai qualcosa da aggiungere?"},
    {"nome": "Prosdocimo",
    "testo": "Tu sai chi sono, vero Ortiz?"},
    {"nome": "Ortiz",
    "testo": "Posso facilmente immaginarlo..."},
    {"nome": "Prosdocimo",
    "testo": "Ho due richieste. La prima &#xE8; di venire su Angustina con voi, come ufficiale tecnico."},
    {"nome": "Ortiz",
    "testo": "Provveder&#xF2; al pi&#xF9; presto. La seconda?"},
    {"nome": "Prosdocimo",
    "testo": "Cosa &#xE8; successo alla spedizione segreta, trent&#x27;anni fa?"},
    {"nome": "Ortiz",
    "testo": "Memoria lunga, eh? Siamo arrivati su Tronk e abbiamo conosciuto gli Ibridi. I miei compagni sono rimasti l&#xE0;, mentre io sono tornato per eseguire questo lungo lavoro, che si &#xE8; concluso con questa alleanza."},
    {"nome": "Prosdocimo",
    "testo": "Ortiz, la vecchia volpe... eh eh eh."}
  ],
  
  "manuale": "La <i>codifica<\/i> e la <i>decodifica<\/i> di un messaggio avvengono in maniera molto semplice. Prendiamo per esempio la parola:\n<pre><code>aiuto\n<\/code><\/pre>\nSupponiamo che la nostra codifica preveda di prendere ogni lettera della parola e sostituirla con la lettera immediatamente successiva nell&#x27;alfabeto. La parola aiuto diventa dunque:\n<pre><code>bjvup\n<\/code><\/pre>\nIl nemico se non sa qual &#xE8; la codifica da noi utilizzata, quindi difficilmente comprender&#xE0; cosa vuol dire la parola <tt>bjvup<\/tt>.<br> Quando noi per&#xF2; riceviamo il messaggio, conoscendo la codifica sostituiamo ogni lettera con quella che la precede nell&#x27;alfabeto, ottenendo di nuovo la parola:\n<pre><code>aiuto\n<\/code><\/pre>\nLa decodifica &#xE8; dunque l&#x27;operazione inversa della codifica: senza conoscere la codifica sar&#xE0; per&#xF2; molto difficile leggere un messaggio codificato.",

  "codiceLivello": "function Livello8 ( callbackFineLivello ) {\n  CoreLevel.call( this, callbackFineLivello );\n}\n\nLivello8.prototype = Object.create( CoreLevel.prototype );\nLivello8.prototype.constructor = Livello8;\n\nLivello8.prototype.inizializzaBasi = function ( ) {\n  this.coreGame.aggiungiBase( new BaseMilitare( 80,  430, false, 100, 'red', this.coreGame ) );\n  this.coreGame.aggiungiBase( new BaseMilitare( 130,  430, true, 100, 'cyan', this.coreGame ) );  \n  this.coreGame.aggiungiBase( new BaseMilitare( 180,  430, false, 100, 'red', this.coreGame ) );\n  this.coreGame.aggiungiBase( new BaseMilitare( 300,  430, true, 100, 'cyan', this.coreGame ) );\n  this.coreGame.aggiungiBase( new BaseMilitare( 350,  430, false, 100, 'red', this.coreGame ) );\n  this.coreGame.aggiungiBase( new BaseMilitare( 400,  430, true, 100, 'cyan', this.coreGame ) );\n}\n\nLivello8.prototype.inizializzaArmiNemiche = function () {\n  var areaPertenza = this.coreGame.canvas.width;\n  var ritardoMassimo = 900 * (this.numeroOndata * 0.05);\n  var velMin = 1.5 + this.numeroOndata * 0.1;\n  var velMax = 1.6 + this.numeroOndata * 0.1;\n  var numeroMissili = 25 + Math.floor( this.numeroOndata );\n  var numeroMissiliSdoppiabili = rand( 0, numeroMissili );\n  var ritardoRand;\n  var bersagli = this.coreGame.bersagliAttaccabili();\n  \n  var bersagliPrioritari = [];\n  $.each( this.esaminaCanaliRadio(), function ( i, b ) {\n    bersagliPrioritari.push( {x: b.x + 15, y: b.y - 10, tipo: b} )\n  } );\n  \n  var bersagliNonBasi = this.coreGame.bersagliAttaccabili().filter( function( b ) {\n    if( b.tipo instanceof BaseMilitare )\n      return false;\n    return true;\n  } );\n  \n  var bersagliPrioritariEsauriti = true;\n  $.each( bersagliPrioritari, function( i, b ) {\n    if( b.tipo.attiva === true )\n      bersagliPrioritariEsauriti = false;\n  } )\n  \n  if( bersagliPrioritariEsauriti === true ) {\n    var bersagli = this.coreGame.bersagliAttaccabili();\n  } else {\n    var bersagli = bersagliNonBasi.concat( bersagliPrioritari );   \n  }\n  \n  for( var i = 0; i < numeroMissili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemico( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand,  ritardoRand, this.coreGame) );\n  }\n}\n\nLivello8.prototype.calcolaCoefficienteOndata = function ( ) {\n  return this.numeroOndata * 2.5;\n}\n\nLivello8.prototype.setupListeners = function ( ) { \n  var mySelf = this;\n  $( '.gameContainer' ).off();\n  $( '.gameContainer' ).focus();\n  \n  $( '.gameContainer' ).on( 'click', function ( ) {\n    mySelf.sparo( mySelf.coreGame.mirino.x, mySelf.coreGame.mirino.y, null );\n  } );\n  \n  $( '.gameContainer' ).on( 'mouseover', function( event ) {\n    mySelf.coreGame.mirino.stato = Mirino.TRACCIAMENTO;\n  });\n  $( '.gameContainer' ).on( 'mouseout', function( ) {\n    mySelf.coreGame.mirino.stato = Mirino.SPENTO;\n  });\n  $( '.gameContainer' ).on( 'mousemove', function( event ) {\n    var offset = $(\".gameContainer\").offset();\n    mySelf.coreGame.mirino.inseguiX = event.pageX - offset.left;\n    mySelf.coreGame.mirino.inseguiY = event.pageY - offset.top;\n    mySelf.coreGame.mirino.cambiaMira();\n  });\n}\n\nLivello8.prototype.scegliTorretta = function ( x, y, tasto ) {\n  var nonFunzionante = function ( torretta ) {  \n    if( torretta.stato === BatteriaAntimissile.ATTIVA &&\n        torretta.numeroMissili > 0 &&\n        torretta.blocco === false )\n      return false;\n    else\n      return true;\n  }\n  \n  var torrette = this.coreGame.batterieAntimissile;\n  var torrettaSelezionata;\n  \n  if( 0 <= x && x < 170 ) {\n    torrettaSelezionata = 0;\n  }\n  if( 170 <= x && x < 340 ) {\n    torrettaSelezionata = 1;\n  }\n  if( 340 <= x && x <= 510 ) {\n    torrettaSelezionata = 2;\n  }\n  \n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    torrettaSelezionata = 1;\n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    torrettaSelezionata = 0;\n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    torrettaSelezionata = 2;\n  if( nonFunzionante(torrette[torrettaSelezionata]) === true )\n    return -1;\n    \n  return torrettaSelezionata;\n}\n\nLivello8.prototype.sparo = function ( x, y, tasto ) {\n  var indiceTorretta = this.scegliTorretta( x, y, tasto );\n  if( indiceTorretta === -1 )\n    return;\n  \n  var torretta = this.coreGame.batterieAntimissile[indiceTorretta];\n  var x1 = x + 10;\n  var x2 = x - 10;\n  var ySdoppio = (Math.abs(430 - y) \/ 2) + y;\n  \n  var distanzaX = Math.abs( x - torretta.x );\n  var distanzaY = Math.abs( y - torretta.y );\n  this.coreGame.missiliTerrestri.push( new _MissileTerrestreDoppio( {\n    xDiPartenza: torretta.x,\n    yDiPartenza: torretta.y,\n    xDiArrivo: x,\n    yDiArrivo: y,\n    coloreTestata: 'yellow',\n    coloreScia: 'blue',\n    massimoRaggioEsplosione: 30,\n    distanzaPerFrame: 7\n  }, this.coreGame, torretta.x - distanzaX\/2, ySdoppio, 2 ) );\n  \n  this.coreGame.aggiornaPunteggioMissiliSparati();\n  torretta.numeroMissili--;\n  torretta.temperatura += 100;\n  var temperaturaMinima = 500\n  torretta.temperaturaSblocco = temperaturaMinima;\n  if( torretta.temperatura >= 799 ) {\n    torretta.blocco = true;\n  };\n}\n\nLivello8.prototype.mostraSchermataIniziale = function ( punteggio ) {\n  var mySelf = this;\n  mySelf.coreGame.disegnaStatoGioco();\n  mySelf.coreGame.disegnaBatterieAntimissile();\n  var ctx = mySelf.ctx;\n  \n  this.intervalloSchermata = setInterval( function () {\n    mySelf.coreGame.disegnaStatoGioco();\n    mySelf.coreGame.disegnaBatterieAntimissile();\n    if( mySelf.numeroSchermata === 0 ) {\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( \"Punteggio: \" + punteggio, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 120 );\n      ctx.textAlign = \"start\";\n      \n      ctx.fillStyle = mySelf.coreGame.coloreTestoPrimario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( 'CLICK PER INIZIARE A GIOCARE', \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 50 );\n      ctx.textAlign = \"start\";\n      \n      \/\/ parte fissa\n      ctx.textAlign = \"center\";\n      ctx.font = 'bold 20px arial';\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText( 'Ondata ' + mySelf.numeroOndata, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 + 20 - 50);\n      ctx.textAlign = \"start\";\n      var img = document.getElementById(\"source-mouse-click\");\n      ctx.drawImage(img, \n                    mySelf.canvas.width\/2 - 100, mySelf.canvas.height\/2 + 40, 30, 80);\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText(\"Fare click sinistro\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40);\n      ctx.fillText(\"per sparare\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40 + 20);\n      ctx.textAlign = \"start\";\n    } else {\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.textAlign = \"center\"; \n      ctx.font = 'bold 20px arial';\n      ctx.fillText( \"Punteggio: \" + punteggio, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 - 20 - 120 );\n      ctx.textAlign = \"start\";\n      \n      ctx.textAlign = \"center\";\n      ctx.font = 'bold 20px arial';\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText( 'Ondata ' + mySelf.numeroOndata, \n                   mySelf.canvas.width\/2, mySelf.canvas.height\/2 + 20 - 50);\n      ctx.textAlign = \"start\";\n      var img = document.getElementById(\"source-mouse-click\");\n      ctx.drawImage(img, \n                    mySelf.canvas.width\/2 - 100, mySelf.canvas.height\/2 + 40, 30, 80);\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = mySelf.coreGame.coloreTestoSecondario;\n      ctx.fillText(\"Fare click sinistro\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40);\n      ctx.fillText(\"per sparare\", \n                   mySelf.canvas.width\/2 - 40, mySelf.canvas.height\/2 + 40 + 40 + 20);\n      ctx.textAlign = \"start\";    \n    }\n    mySelf.numeroSchermata = (mySelf.numeroSchermata + 1) % 2;\n  }, 500 );\n  \n  $( '.gameContainer' ).off();\n  $( '.gameContainer' ).one( 'click', function() {\n    clearInterval( mySelf.intervalloSchermata );\n    mySelf.preparazioneAvvio();\n  } );                     \n}\n\n\/\/ interfaccia codice utente - livello\n\nvar canaleTrasmissione = [\n  { radioIdentificatore: \"BX1\", \n    testo: \"[21:05] Non possiamo fare nulla! dovete contattare BX5 solo loro hanno i mezzi per aiutarvi!\"},\n  { radioIdentificatore: \"AX2\", \n    testo: \"[21:02] Parla base AX2, ci serve immediato aiuto, siamo sotto attacco!\"},\n  { radioIdentificatore: \"BX3\", \n    testo: \"[21:08] Non possiamo fare nulla! dovete contattare BX5 solo loro hanno i mezzi per aiutarvi!\"},\n  { radioIdentificatore: \"AX4\", \n    testo: \"[21:12] Non possiamo fare nulla! dovete contattare BX5 solo loro hanno i mezzi per aiutarvi!\"},\n  { radioIdentificatore: \"BX5\", \n   testo: \"[21:20] Ricevuto! Accorriamo immediatamente!\"},\n  { radioIdentificatore: \"AX6\", \n   testo: \"[21:06] Non possiamo fare nulla! dovete contattare BX5 solo loro hanno i mezzi per aiutarvi!\"},\n]\n\nLivello8.prototype.esaminaCanaliRadio = function ( ) {\n  var lettere = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"z\"];\n  var canale = [];\n  var tx = new Trasmettitore( canale );\n  var basi = this.coreGame.basi\n  $.each( basi, function ( i, b ) {\n    var id = \"\";\n    if( b.vitale === true ) {\n      id += \"AX\" + i; \n    } else {\n      id += \"BX\" + i;\n    }\n    var messaggio = \"\"; \n    for( var j = 0; j < rand(10, 20); ++j )\n      messaggio += lettere[rand(0, lettere.length-1)];\n    \n    tx.inviaMessaggio( id, messaggio, i );\n  } );\n  codificaSegnale( canale );\n  \n  var bersagliPrioritari = [];\n  $.each( canale, function( i, c ) {\n    if( c.radioIdentificatore.indexOf(\"AX\") >= 0)\n      bersagliPrioritari.push( basi[i] );\n  } );\n  \n  trasmissione( canaleTrasmissione );\n    \n  return bersagliPrioritari;\n}",
  
  "fileVirtuali":
  [
    {"nomeFile": "TrasmissioniRadio.js",
    "consultazione": true,
    "codice": "\/**********\nBenvenuto nel file di configurazione delle trasmissioni del sistema HOB-2000.\nQuesto codice permette di impostare correttamente la trasmissione radio tra le diverse basi del fronte.\n\u00c8 inoltre possibile modificare tale file per aggiungere funzioni di codifica e decodifica delle trasmissioni, semplicemente scrivendo il codice per le funzioni codificaSegnale() e decodificaSegnale().\n**********\/\n\n\/\/ Classe del trasmettitore.\nfunction Trasmettitore ( canaleTrasmissione ) {\n  this.canaleTrasmissione = canaleTrasmissione;\n}\n\n\/\/ Funzione di invio del messaggio.\n\/\/ Dato un identificatore del mittente, un messaggio ed un canale radio,\n\/\/ il testo viene inviato sul canale corretto.\nTrasmettitore.prototype.inviaMessaggio = function ( identificatoreRadio, messaggio, numeroCanale ) {\n  var messaggioRadio = {\n    radioIdentificatore: identificatoreRadio,\n    testo: messaggio\n  }  \n  this.canaleTrasmissione[ numeroCanale ] = messaggioRadio;\n}\n\n\/\/ Funzione di ricezione del messaggio.\nTrasmettitore.prototype.riceviMessaggio = function ( identificatoreRadio, numeroCanale ) {\n  return this.canaleTrasmissione[numeroCanale].testo;\n}\n\n\/\/ Funzione di trasmissione.\nvar trasmissione = function ( canaleTrasmissione ) {\n  var identificatoreRadio = \"AX2\";\n  var messaggio = \"[21:02] Parla base AX2, ci serve immediato aiuto, siamo sotto attacco!\";\n  var numeroCanale = 1;\n  \n  trasmettitore = new Trasmettitore( canaleTrasmissione );\n  \n  console.log( messaggio );\n  trasmettitore.inviaMessaggio( identificatoreRadio, messaggio, numeroCanale );\n  \n  \/\/ Le funzioni seguenti devi scriverle tu!\n  \/\/ \/\\\/\\\/\\ Gen. Ortiz \/\\\/\\\/\\\n  codificaSegnale( canaleTrasmissione );\n  decodificaSegnale( canaleTrasmissione );\n  \n  var messaggioRicevuto = trasmettitore.riceviMessaggio( \"BX5\", 4 );\n  console.log( messaggioRicevuto );\n}" },
    {"nomeFile": "Decoder.js",
    "consultazione": false,
    "codice": "\/**********\nQuesto \u00e8 il file per scrivere il codice delle funzioni di codifica e decodifica.\nFanne buon uso.\n\/\\\/\\\/\\ Gen. Ortiz \/\\\/\\\/\\\n**********\/\n\n\/\/ Funzione per la codifica del segnale radio.\nvar codificaSegnale = function ( canaleTrasmissione ) {\n\/\/###START_MODIFICABILE###\n  \/\/ Codice da scrivere\n\/\/###END_MODIFICABILE###\n}\n\n\/\/ Funzione per la decodifica del segnale radio.\nvar decodificaSegnale = function ( canaleTrasmissione ) {\n\/\/###START_MODIFICABILE###\n  \/\/ Codice da scrivere\n\/\/###END_MODIFICABILE###\n}",
    "test": "( function () {\n  var lettere = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"z\"];\n  var canale = [];\n  var tx = new Trasmettitore( canale );\n  var basi = [ new BaseMilitare( 80,  430, false, 100, 'red', this.coreGame ),\n    new BaseMilitare( 130,  430, true, 100, 'cyan', this.coreGame ),\n    new BaseMilitare( 180,  430, false, 100, 'red', this.coreGame ),\n    new BaseMilitare( 300,  430, true, 100, 'cyan', this.coreGame ),\n    new BaseMilitare( 350,  430, false, 100, 'red', this.coreGame ),\n    new BaseMilitare( 400,  430, true, 100, 'cyan', this.coreGame ) ];\n  $.each( basi, function ( i, b ) {\n    var id = \"\";\n    if( b.vitale === true ) {\n      id += \"AX\" + i; \n    } else {\n      id += \"BX\" + i;\n    }\n    var messaggio = \"\"; \n    for( var j = 0; j < rand(10, 20); ++j )\n      messaggio += lettere[rand(0, lettere.length-1)];\n    \n    tx.inviaMessaggio( id, messaggio, i );\n  } );\n  var backupCanale = canale.slice(0);\n  codificaSegnale( canale );  \n  \n  var bersagliPrioritari = [];\n  $.each( canale, function( i, c ) {\n    if( c.radioIdentificatore.indexOf(\"AX\") >= 0)\n      bersagliPrioritari.push( basi[i] );\n  } );\n  \n  var esito = true;\n  $.each( bersagliPrioritari, function( i, b ) {\n    esito = esito && ( b.vitale === false );\n  } )\n  \n  decodificaSegnale( canale );\n  $.each( canale, function( i, c ) {\n    esito = esito && ( c.radioIdentificatore === backupCanale[i].radioIdentificatore &&\n      c.testo === backupCanale[i].testo )\n  } )\n  \n  return esito;  \n}) ();",
    "descrizione": "L&#x27;obiettivo &#xE8; quello di riempire due funzioni: la prima necessaria per la codifica del segnale radio e la seconda per la decodifica.<br>\nNota bene! Le basi colorate di rosso sono quelle ausiliarie, mentre quelle azzurre sono le basi vitali.<br>\nLa funzione di codifica andr&#xE0; dunque sostituito il segnale di una base ausiliaria con quello di una base vitale e viceversa, scambiando completamente i due tipi di base agli occhi del Nemico.<br>\nLa funzione di decodifica deve invece ripristinare il collegamento esattamente com&#x27;era prima della codifica: riscambiando cio&#xE8; i codici dei canali radio.",
    "aiuto": "La funzione <tt>codificaSegnale()<\/tt> pu&#xF2; essere implementata nel modo seguente:\n<pre><code>var temporaneo;\ntemporaneo = canaleTrasmissione[0];\ncanaleTrasmissione[0] = canaleTrasmissione[1];\ncanaleTrasmissione[1] = temporaneo;\ntemporaneo = canaleTrasmissione[2];\ncanaleTrasmissione[2] = canaleTrasmissione[3];\ncanaleTrasmissione[3] = temporaneo;\ntemporaneo = canaleTrasmissione[4];\ncanaleTrasmissione[4] = canaleTrasmissione[5];\ncanaleTrasmissione[5] = temporaneo;\n<\/code><\/pre>\nMentre la funzione <tt>decodificaSegnale()<\/tt>, che deve effettuare l&#x27;operazione contraria, pu&#xF2; essere scritta nel modo seguente:\n<pre><code>var temporaneo;\ntemporaneo = canaleTrasmissione[1];\ncanaleTrasmissione[1] = canaleTrasmissione[0];\ncanaleTrasmissione[0] = temporaneo;\ntemporaneo = canaleTrasmissione[3];\ncanaleTrasmissione[3] = canaleTrasmissione[2];\ncanaleTrasmissione[2] = temporaneo;\ntemporaneo = canaleTrasmissione[5];\ncanaleTrasmissione[5] = canaleTrasmissione[4];\ncanaleTrasmissione[4] = temporaneo;\n<\/code><\/pre>\nNota bene! La variabile temporanea permette di scambiare agilmente i valori dei canali: senza sarebbe molto pi&#xF9; complicata.",
    "messaggioFallimento": "Codifica o decodifica errate."}
  ]
}