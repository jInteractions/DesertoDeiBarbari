{
  "nomeLivello": "Bastiani, la fortezza",
  "numeroLivello": 1,
  "costoAiuti": 0,

  "dialogoIniziale":
  [
    {"nome": "Ortiz",
    "testo": "Buongiorno, capitano Simeoni. Io sono il generale Ortiz, a capo dell&#x27;Ottava Armata delle United Terrestrial Forces, nome in codice UTF-8. Sar&#xE0; a me che dovrai fare rapporto nei mesi a venire. Chiaro?"},
    {"nome": "Simeoni",
    "testo": "Signors&#xEC;, signore."},
    {"nome": "Ortiz",
    "testo": "Ottimo. Come puoi ben vedere, abbiamo appena subito un attacco del Nemico. Vorremmo reagire ma... purtroppo le difese del pianeta Bastiani sono inutilizzabili."},
    {"nome": "Simeoni",
    "testo": "Inutilizzabili, signore?"},
    {"nome": "Ortiz",
    "testo": "Esattamente, capitano. Come se qualcuno avesse inserito una sicura di sparo. Ed &#xE8; qui che entri in gioco tu. Il tempo &#xE8; poco, ma confido in te. Sai cos&#x27;&#xE8; un codice sorgente? Come sicuramente ti avranno spiegato all&#x27;Accademia, ogni arma terrestre contiene una grossa parte di informatica."},
    {"nome": "Simeoni",
    "testo": "Esatto, signore."},
    {"nome": "Ortiz",
    "testo": "Questa parte di informatica consiste in un insieme di istruzioni su ci&#xF2; che le armi devono fare. Tali istruzioni devono essere scritte in un linguaggio comprensibile alle armi: un linguaggio di questo genere viene chiamato linguaggio di programmazione. L&#x27;insieme di istruzioni, scritte in un linguaggio di programmazione viene chiamato codice sorgente. Quando l&#x27;arma prende il codice sorgente, esso diventa un programma. Mi sono spiegato bene?"},
    {"nome": "Simeoni",
    "testo": "Affermativo, signore."},
    {"nome": "Ortiz",
    "testo": "Il tuo primo compito sar&#xE0; quello di modificare il codice sorgente per le armi di Bastiani. I nostri tecnici ti hanno fornito una postazione di comando su cui lavorare. Ho per&#xF2; una brutta notizia."},
    {"nome": "Simeoni",
    "testo": "Brutta notizia, signore?"},
    {"nome": "Ortiz",
    "testo": "Il linguaggio di programmazione utilizzato per la scrittura dei programmi militari si chiama JS. Purtroppo tutti i documenti relativi a questo linguaggio sono... spariti. Non ne esiste una sola testimonianza in tutta la galassia. Archivi militari, archivi civili, biblioteche, universit&#xE0;... nulla! Come se non fosse mai esistito."},
    {"nome": "Simeoni",
    "testo": "Bene, signore. La difficolt&#xE0; &#xE8; mia amica. Spero solo di essere in grado di capire questo linguaggio il prima possibile."},
    {"nome": "Ortiz",
    "testo": "Non preoccuparti, ho lasciato qualche commento di aiuto al codice. Come ben sai un commento &#xE8; una parte del codice sorgente che non descrive un&#x27;istruzione, ma semplicemente aiuta chi legge il codice nel comprendere ci&#xF2; che c&#x27;&#xE8; scritto."},
    {"nome": "Simeoni",
    "testo": "Grazie signore."},
    {"nome": "Ortiz",
    "testo": "Di nulla. Per qualunque dubbio, chiedi. Come prima cosa noterai che il sistema richiede un accesso automatico, effettuato tramite il controllo della tua retina. Se questo non funziona, non preoccuparti: raramente va tutto bene. Dovrai dunque eseguire un accesso manuale, modificando alcuni file che si occupano di tale controllo. Troverai comunque una descrizione pi&#xF9; dettagliata nel documento che ti ho lasciato."},
    {"nome": "Simeoni",
    "testo": "Signors&#xEC;, signore."},
    {"nome": "Ortiz",
    "testo": "Mi aspetto grandi cose da te, capitano. Non deludermi."}
  ],

  "dialogoFinale":
  [
    {"nome": "Simeoni",
    "testo": "A rapporto, generale Ortiz."},
    {"nome": "Ortiz",
    "testo": "Bel lavoro Simeoni, con quel sistema. Era ora che arrivasse qualcuno in grado di gestirlo..."},
    {"nome": "Simeoni",
    "testo": "Grazie signore! Ho altri ordini, signore?"},
    {"nome": "Ortiz",
    "testo": "No, non per oggi. Vai a riposarti, sapendo che finalmente possiamo provare a respingere quei maledetti. Gli incursori hanno segnalato movimenti al confine del deserto... domani sar&#xE0; una giornata lunga, nell&#x27;eterna notte di Bastiani."}
  ],

  "manuale": "Un linguaggio di programmazione possiede una grammatica: in esso esistono alcune parole dal significato speciale, chiamate <b>parole chiave<\/b>. <br>\nLa prima parole chiave da imparare &#xE8; <b>var<\/b>. <br>\nPrendi per esempio la riga:\n<pre><code>var x;\n<\/code><\/pre>\nEssa indica che ogni volta che nel codice sorgente compare la parola <i>x<\/i>, essa rappresenta la <b>variabile<\/b> cos&#xEC; chiamata. <br>\nUna variabile altro non &#xE8; che un contenitore, una &#x22;scatola&#x22; in cui inserire dei valori. <br>\nPrendi per esempio l&#x27;istruzione:\n<pre><code>var x = 4;\n<\/code><\/pre>\nLa variabile di nome <i>x<\/i> ora contiene un valore numerico, in questo caso 4. <br>\nEsistono differenti tipologie di valori che si possono inserire in una variabile: i <b>tipi<\/b> di valore pi&#xF9; utilizzati sono valori numerici e stringhe. <br>\nEsempi di valori numerici sono: 4, 6, 12.5, 24.3, ma anche operazioni aritmetiche come 16+5, 4*3, 5-12 o 24\/6. <br>\nUna <b>stringa<\/b> &#xE8; invece un insieme di caratteri, come &#x22;Bastiani&#x22;, &#x22;Ortiz&#x22; o &#x22;battaglia&#x22;. Pu&#xF2; anche contenere numeri: per esempio, &#x22;UTF-8&#x22; &#xE8; una stringa. <br>\nUn&#x27;operazione utile da effettuare sulle stringhe &#xE8; la cosiddetta <b>concatenazione<\/b>, cio&#xE8; l&#x27;unione di due o pi&#xF9; stringhe. Per esempio:\n<pre><code>var stringaDiProva = &#x22;anti&#x22; + &#x22;missile&#x22;;\n<\/code><\/pre>\nindica che nella variabile <tt>stringaDiProva<\/tt> &#xE8; contenuta la stringa &#x22;antimissile&#x22;.\nNota bene! Il nome della variabile pu&#xF2; contenere lettere e numeri, pi&#xF9; il carattere speciale &#x22;_&#x22;, ma nient&#x27;altro. Il nome di una variabile non pu&#xF2; mai iniziare con un numero, ma pu&#xF2; averne in mezzo ed anche alla fine. Per esempio:\n<pre><code>var 7Nani;\n<\/code><\/pre>\n&#xE8; errato, mentre\n<pre><code>var numero1;\nvar caricatore6Cannone;\n<\/code><\/pre>\nsono corrette.\nNota bene! <i>var<\/i> &#xE8; una parola chiave, per cui non potrai utilizzarla come nome per le variabili. Per esempio, l&#x27;istruzione:\n<pre><code>var var = 2;\n<\/code><\/pre>\nrestituir&#xE0; un errore.\nQuesto vale per tutte le parole chiave che incontrerai in futuro.\nNota bene! I nomi da assegnare alle variabili devono essere significativi. Per esempio, la variabile <tt>nomeSoldato<\/tt> indica che stiamo creando una variabile che conterr&#xE0; una stringa indicante il nome di un soldato; chiamandola, per esempio, <tt>stringa<\/tt> o in un altro modo, sarebbe stato pi&#xF9; difficile capire il suo scopo.",

  "codiceLivello": "function Livello1 ( callbackFineLivello ) {\n  CoreLevel.call( this, callbackFineLivello );\n}\n\nLivello1.prototype = Object.create( CoreLevel.prototype );\nLivello1.prototype.constructor = Livello1;\n\nLivello1.prototype.inizializzaMirino = function ( ) {\n  if ( controlloAccesso() === true ) {\n    this.mirino = new Mirino( this.canvas.width \/ 2, this.canvas.height \/ 2, 10.0 );\n  } else {\n    this.mirino = new Mirino( this.canvas.width \/ 2, this.canvas.height \/ 2, 0 );\n  }\n}\n\nLivello1.prototype.inizializzaLivello = function ( ) {\n  this.inizializzaMirino();\n  this.coreGame = new CoreGame( this.canvas, this.mirino, {\n    coloreSfondo: 'black',\n    coloreTerreno: 'yellow',\n    coloreTestoPrimario: 'blue',\n    coloreTestoSecondario: 'red'\n  });\n  this.inizializzaTorrette();\n  this.inizializzaBasi();\n  this.inizializzaArmiNemiche();\n  this.inizializzaArmiTerrestri();\n  \/\/ chiamata alla funzione di autenticazione manuale\n  this.setupListeners();\n}\n\nLivello1.prototype.inizializzaTorrette = function () {\n  var nMissili = 10;\n  var nSoldati = 10;\n  var Tmin = 50;\n  var Tmax = 1000;\n  var deltaTempo = 70;\n  var deltaRaffreddamento = 3;\n  \n  var coloreMissili0 = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n  coloreMissili0[ rand( 0, 9 ) ] = 'red';\n  coloreMissili0[ rand( 0, 9 ) ] = '#33CCFF';\n  coloreMissili0[ rand( 0, 9 ) ] = 'red';\n  coloreMissili0[ rand( 0, 9 ) ] = '#33CCFF';       \n  coloreMissili0[ rand( 0, 9 ) ] = 'red';\n  this.coreGame.aggiungiBatteriaAntimissile(\n    new BatteriaAntimissile ( 35, 410, nMissili, nSoldati, coloreMissili0, Tmin, Tmax, deltaTempo, deltaRaffreddamento, this.coreGame )\n  );\n  \n  coloreMissili1 = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n  coloreMissili1[ rand( 0, 9 ) ] = 'red';\n  coloreMissili1[ rand( 0, 9 ) ] = '#33CCFF';\n  coloreMissili1[ rand( 0, 9 ) ] = 'red';\n  coloreMissili1[ rand( 0, 9 ) ] = '#33CCFF';       \n  coloreMissili1[ rand( 0, 9 ) ] = 'red';\n  this.coreGame.aggiungiBatteriaAntimissile(\n    new BatteriaAntimissile ( 255, 410, nMissili, nSoldati, coloreMissili1, Tmin, Tmax, deltaTempo, deltaRaffreddamento, this.coreGame )\n  );\n  \n  var coloreMissili2 = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n  coloreMissili2[ rand( 0, 9 ) ] = 'red';\n  coloreMissili2[ rand( 0, 9 ) ] = '#33CCFF';\n  coloreMissili2[ rand( 0, 9 ) ] = 'red';\n  coloreMissili2[ rand( 0, 9 ) ] = '#33CCFF';       \n  coloreMissili2[ rand( 0, 9 ) ] = 'red';\n  this.coreGame.aggiungiBatteriaAntimissile(\n    new BatteriaAntimissile ( 475, 410, nMissili, nSoldati, coloreMissili2, Tmin, Tmax, deltaTempo, deltaRaffreddamento, this.coreGame )\n  );\n};\n\nLivello1.prototype.inizializzaArmiNemiche = function () {\n  var areaPertenza = this.coreGame.canvas.width;\n  var ritardoMassimo = 100 + this.numeroOndata * 0.05;\n  var velMin = 1.0 + this.numeroOndata * 0.05;\n  var velMax = 1.2 + this.numeroOndata * 0.05;\n  var numeroMissili = 10 + Math.floor( this.numeroOndata );\n  var ritardoRand;\n  var bersagli = this.coreGame.bersagliAttaccabili();\n  \n  for( var i = 0; i < numeroMissili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemico( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand,  ritardoRand, this.coreGame) );\n  }\n}\n\nLivello1.prototype.sparo = function ( x, y, tasto ) {\n  var indiceTorretta = this.scegliTorretta( x, y, tasto);\n  var raggio = 30;\n  var xModificata = x + rand( -raggio, raggio );\n  var yModificata = y + rand( -raggio, raggio );\n  \n  var vel = 0;\n  var incrementoTemperatura = 150;\n  var coloreScia = 'blue';\n  var raggioEsplosione = 2;\n  \n  if( indiceTorretta === -1 )\n    return;\n  \n  var torretta = this.coreGame.batterieAntimissile[indiceTorretta];\n    \n  if( torretta.tipoMunizioni[ torretta.numeroMissili - 1 ] === 'blue' ) { \n    vel = 7; coloreScia = 'blue'; raggioEsplosione = 20;\n  }\n  if( torretta.tipoMunizioni[ torretta.numeroMissili - 1 ] === 'red' ) { \n    vel = 8; coloreScia = 'red'; raggioEsplosione = 2;\n  }\n  if( torretta.tipoMunizioni[ torretta.numeroMissili - 1 ] === '#33CCFF' ) { \n    vel = 0.5; coloreScia = '#33CCFF'; raggioEsplosione = 30;\n  }\n    \n  if ( sbloccaSparo() === false ) {\n    console.log(\"> Sicura attiva!\");\n    return;\n  }\n  \n  this.coreGame.missiliTerrestri.push( new MissileTerrestre( {\n    xDiPartenza: this.coreGame.batterieAntimissile[ indiceTorretta ].x,\n    yDiPartenza: this.coreGame.batterieAntimissile[ indiceTorretta ].y,\n    xDiArrivo: xModificata,\n    yDiArrivo: yModificata,\n    coloreTestata: 'yellow',\n    coloreScia: coloreScia,\n    massimoRaggioEsplosione: raggio,\n    distanzaPerFrame: vel\n  }, this.coreGame ) );\n  this.coreGame.aggiornaPunteggioMissiliSparati();\n  this.coreGame.batterieAntimissile[ indiceTorretta ].numeroMissili--;\n  this.coreGame.batterieAntimissile[ indiceTorretta ].temperatura += incrementoTemperatura;\n}\n\nLivello1.prototype.calcolaCoefficienteOndata = function () {\n  return this.numeroOndata * 1.2;\n}\n\n\/\/ interfaccia test - codice utente\nvar controlloAccesso = function () {\n  var risultato = autenticazioneManuale();\n  var nome = risultato[ 0 ];\n  var matricola = risultato[ 1 ];\n  var password = risultato[ 2 ];\n  var stringa = risultato[ 3 ];\n  \n  if (\n    nome === \"Cpt Simeoni\"\n    && matricola === 150716\n    && password === \"utf-8_tuono\"\n    && stringa === risultato[ 0 ] + \"%\" + risultato[ 1 ] + \"<\" + risultato[ 2 ] + \">\"\n  ) {\n    console.log(\"> Informazioni inserite correttamente.\\nBuon proseguimento con il sistema Hob-2000.\\n\");\n    return true;\n  } else {\n    console.log(\n      \"> Nome: \" + nome\n      + \"\\n> Matricola: \" + matricola\n      + \"\\n> Password: \" + Array(password.length + 1).join(\"*\")\n      + \"\\n> Stringa: \" + stringa\n      + \"\\n> Informazioni non corrette.\"\n    );\n    return false;\n  }\n}\n\n\/\/ interfaccia test - codice utente\nvar sbloccaSparo = function ( ) {\n  var base = rand(1, Math.sqrt(Number.MAX_VALUE));\n  var altezza = rand(1, Math.sqrt(Number.MAX_VALUE));\n  if( base * altezza === verificaPresenzaCervelloOperatore( base, altezza ) ) {\n    console.log(\"> Formula corretta, verifica completata.\");\n    return true;\n  } else {\n    console.log(\"> Formula errata, forma di vita intelligente non rilevata.\");\n    return false;\n  }\n}",

  "fileVirtuali":
  [
    {"nomeFile": "Benvenuto.hob",
    "consultazione": true,
    "codice": "\/*\n __   __  _______  _______         _______  _______  _______  _______ \n|  | |  ||       ||  _    |       |       ||  _    ||  _    ||  _    |\n|  |_|  ||   _   || |_|   | ____  |____   || | |   || | |   || | |   |\n|       ||  | |  ||       ||____|  ____|  || | |   || | |   || | |   |\n|       ||  |_|  ||  _   |        | ______|| |_|   || |_|   || |_|   |\n|   _   ||       || |_|   |       | |_____ |       ||       ||       |\n|__| |__||_______||_______|       |_______||_______||_______||_______|\nQuesto file \u00e8 stato generato automaticamente dal sistema antimissilistico\nHOB-2000.\n\n\nBuongiorno, sono il sistema antimissilistico HOB-2000, per comunicarvi che\nl'autenticazione automatica \u00e8 fallita. Se proprio desiderate procedere, avete la possibilit\u00e0 di utilizzare l'autenticazione manuale.\n\nGrazie per aver scelto HOB-2000.\nCopyright (C) 4096 Orsa Minore Software Inc. - Tutti i diritti riservati\n\u00c8 possibile utilizzare, distribuire o modificare questo file secondo i termini della licenza galattica GGPA-DA1979, che sfortunatamente non verr\u00e0 scritta se non nel prossimo secolo.\n*\/"},
    {"nomeFile": "AutenticazioneManuale.js",
    "consultazione": false,
    "codice": "\/**********\nIl codice seguente permette l'autenticazione manuale di un operatore, tramite la creazione di una parola di accesso ottenuta dalla concatenazione di pi\u00f9 stringhe.\nATTENZIONE! Utilizzare solo in caso di fallimento dell'autenticazione automatica.\n\nInserire il proprio nome utente nella variabile \"nome\", la propria matricola nella variabile \"matricola\" e la propria password nella variabile \"password\".\n**********\/\nvar autenticazioneManuale = function () {\n\/\/###START_MODIFICABILE###\n  \/\/ Ricorda: il simbolo = permette di assegnare il valore alla variabile.\n  var nome = \"captano\";\n  var matricola = 0;\n  var password = \"utf\";\n  \/\/ Ricorda: il simbolo + tra due stringhe indica la loro concatenazione.\n  var stringaAccesso = \"UTF-8\" + nome + \"&&--\"+ password + \"%\" + matricola;\n\/\/###END_MODIFICABILE###\n  \n  return [nome, matricola, password, stringaAccesso];\n}",
    "test": "(function () {\n  var risultato = autenticazioneManuale();\n  if (\n    risultato[ 0 ] === \"Cpt Simeoni\"\n    && risultato[ 1 ] === 150716\n    && risultato[ 2 ] === \"utf-8_tuono\"\n    && risultato[ 3 ] === risultato[ 0 ] + \"%\" + risultato[ 1 ] + \"<\" + risultato[ 2 ] + \">\"\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}) ();",
    "descrizione": "L&#x27;obiettivo &#xE8; costruire la frase d&#x27;accesso corretta per sbloccare il sistema di puntamento e sparo. Devi dunque inserire:\n<li>nella variabile <tt>nome<\/tt>, la stringa &#x22;Cpt Simeoni&#x22;;<\/li>\n<li>nella variabile <tt>matricola<\/tt>, il numero 150716;<\/li>\n<li>nella variabile <tt>password<\/tt>, la stringa &#x22;utf-8_tuono&#x22;.<\/li> <br>\nDovrai poi inserire nella variabile <tt>stringaAccesso<\/tt> la corretta composizione della parola d&#x27;accesso, che dovr&#xE0; essere della forma: <br>\n<tt>nome%matricola&#x3C;password&#x3E;<\/tt>.",
    "aiuto": "Come prima cosa si devono effettuare i seguenti assegnamenti:\n<pre><code>var nome = &#x22;Cpt Simeoni&#x22;;\nvar matricola = 150716;\nvar password = &#x22;utf-8_tuono&#x22;;\n<\/code><\/pre>\nPoi cambiare la concatenazione di stringhe per riempire la variabile <tt>stringaAccesso<\/tt>:\n<pre><code>var stringaAccesso = nome + &#x22;%&#x22; + matricola + &#x22;&#x3C;&#x22; + password + &#x22;&#x3E;&#x22;;\n<\/code><\/pre>",
    "messaggioFallimento": "Autenticazione manuale non riuscita."},
    {"nomeFile": "VerificaCervello.js",
    "consultazione": false,
    "codice": "\/**********\nIl codice che segue \u00e8 necessario per verificare la presenza di un operatore umano.\nIl quesito posto \u00e8 semplice: la variabile \"areaRettangolo\" deve contenere la corretta formula per il calcolo dell'area di un rettangolo.\n**********\/\nvar verificaPresenzaCervelloOperatore = function ( base, altezza ) {\n\/\/###START_MODIFICABILE###\n  var areaRettangolo = base + altezza;\n\/\/###END_MODIFICABILE###\n  return areaRettangolo;\n}",
    "test": "( function() {\n  var base = rand(1, Math.sqrt(Number.MAX_VALUE));\n  var altezza = rand(1, Math.sqrt(Number.MAX_VALUE));\n  if( base * altezza === verificaPresenzaCervelloOperatore( base, altezza ) ) {\n    return true;\n  } else {\n    return false;\n  }\n} ) ();",
    "descrizione": "In questo file si verifica la presenza di un operatore umano, cio&#xE8; dotato di cervello. <br>\nPer ottenere l&#x27;accesso &#xE8; necessario che la variabile <tt>area<\/tt> contenga la formula corretta per il calcolo dell&#x27;area di un rettangolo.",
    "aiuto": "Per passare l&#x27;autenticazione manuale &#xE8; necessario modificare l&#x27;operazione per il calcolo dell&#x27;area di un rettangolo, rendendo la variabile <tt>area<\/tt> nel seguente modo:\n<pre><code>var area = base * altezza;\n<\/code><\/pre>",
    "messaggioFallimento": "Formula non corretta."}
  ]
}