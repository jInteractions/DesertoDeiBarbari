{
  "nomeLivello": "Il pianeta misterioso",
  "numeroLivello": 2,
  "costoAiuti": 4000,

  "dialogoIniziale":
  [
    {"nome": "Ortiz",
    "testo": "Capitano, le modifiche che hai apportato al sistema si sono rivelate inutili! Possiamo sparare e puntare, ma i missili non raggiungono correttamente il bersaglio! Hai qualche giustificazione?"},
    {"nome": "Simeoni",
    "testo": "Signore, ho fatto solo quello che mi &#xE8; stato chiesto, cio&#xE8; sbloccare il sistema antimissili. Se ci sono da apportare altre modifiche al codice sorgente lo far&#xF2;, ma mi servirebbe un punto preciso dal quale partire..."},
    {"nome": "Ortiz",
    "testo": "Stai pretendendo troppo, capitano. Siamo al fronte, non a scuola. Devi cavartela da solo! E devi stare attento, oppure la corte marziale potrebbe sentire il tuo nome."},
    {"nome": "Simeoni",
    "testo": "Ma, signore..."},
    {"nome": "Ortiz",
    "testo": "Niente ma! Ora vai subito alla sala di comando! &#xC8; un ordine!"},
    {"nome": "Simeoni",
    "testo": "Signors&#xEC;, signore."},
    {"nome": "Simeoni",
    "testo": "..."},
    {"nome": "Simeoni",
    "testo": "E tu chi saresti? Stavi origliando?"},
    {"nome": "Prosdocimo",
    "testo": "Sembrava parecchio arrabbiato il generale, eh eh eh..."},
    {"nome": "Simeoni",
    "testo": "Allora stavi origliando! Spiegami chi sei e forse non dir&#xF2; al generale che ci stavi ascoltando."},
    {"nome": "Prosdocimo",
    "testo": "Prosdocimo, al tuo servizio! Eh eh eh..."},
    {"nome": "Simeoni",
    "testo": "Ah ma io ti conosco! Sei il vecchio che si occupa delle pulizie qua al quartier generale."},
    {"nome": "Prosdocimo",
    "testo": "Esattamente! E ho le orecchie ancora buone, nonostante l&#x27;et&#xE0;. E forse so pure come aiutarti."},
    {"nome": "Simeoni",
    "testo": "Tu? Un povero vecchio? Ma non farmi ridere."},
    {"nome": "Prosdocimo",
    "testo": "Eh eh eh non hai tutti i torti. Ma ti ripeto, conosco molte cose. Per esempio: sai che sul pianeta Bastiani soffia un vento diverso dal vento che soffia sulla Terra? E possiede una forza gravitazionale otto volte pi&#xF9; potente di quella presente sul pianeta Colombre? Le armi lo sanno..."},
    {"nome": "Simeoni",
    "testo": "Spiegati meglio, ti ascolto."},
    {"nome": "Prosdocimo",
    "testo": "Ecco, bravo. Le armi hanno dei file di configurazione che impostano la forza di sparo e la calibrazione del mirino in base al pianeta su cui si trovano. Devi modificare quei file: probabilmente le armi funzionano, ma sparano in modo errato perch&#xE9; pensano di essere su qualche altro pianeta, come Buzzati o Buttafuoco..."},
    {"nome": "Simeoni",
    "testo": "Grazie, vec... Prosdocimo. Spero che queste informazioni mi vengano utili."},
    {"nome": "Prosdocimo",
    "testo": "Lo saranno, giovane capitano. Parola di Prosdocimo! Per&#xF2; facciamo cos&#xEC;: non dire al tuo generale che ti ho aiutato e che hai utilizzato questo file. Eh eh eh..."}
  ],
  
  "dialogoFinale":
  [
    {"nome": "Simeoni",
    "testo": "Capitano Simeoni a rapporto signore."},
    {"nome": "Ortiz",
    "testo": "Bene. Sapevo che il discorsetto che ti ho fatto stamattina sarebbe servito a qualcosa. Io non sar&#xF2; per sempre su questo pianeta ed &#xE8; giusto che tu sappia anche cavartela da solo. Ho solo una curiosit&#xE0;: come sei riuscito a risolvere questo problema? Devo ammettere che sono colpito..."},
    {"nome": "Simeoni",
    "testo": "Signore, ho solo osservato i missili lanciati nel cielo. Usavano meno propellente, non abbastanza per la forza gravitazionale di Bastiani. Poi il mirino era decisamente sfalsato, come se fosse stato impostato per un vento molto pi&#xF9; forte. Ma non voglio annoiare nessuno, signore."},
    {"nome": "Ortiz",
    "testo": "Comunque ottimo lavoro capitano. Sei congedato, puoi andare a dormire. Domani un&#x27;altra lunga giornata ci attende, nell&#x27;eterna notte di Bastiani... "}
  ],
  
  "manuale": "Un altro punto fondamentale nei codici sorgenti del sistema antimissilistico Hob-2000 &#xE8; rappresentato dalle <b>istruzioni di controllo<\/b>.\nUn&#x27;istruzione di controllo si basa su una nuova tipologia di valore che pu&#xF2; essere inserito in una variabile, chiamato <b>booleano<\/b>.\nUna variabile booleana pu&#xF2; assumere due valori differenti:\n<li> <i>true<\/i>, se essa rappresenta un concetto vero;<\/li>\n<li> <i>false<\/i>, se essa rappresenta un concetto falso.<\/li> <br>\nPer rappresentare il vero e il falso &#xE8; possibile utilizzare sia le parole chiave appropriate (rispettivamente <i>true<\/i> e <i>false<\/i>), oppure diversi tipi di operatori:\n<li> <tt>a === b<\/tt>, vero se <tt>a<\/tt> &#xE8; uguale a <tt>b<\/tt>;<\/li>\n<li> <tt>a !== b<\/tt>, vero se <tt>a<\/tt> &#xE8; diverso da <tt>b<\/tt>;<\/li>\n<li> <tt>a &#x3E; b<\/tt>, vero se <tt>a<\/tt> &#xE8; maggiore di <tt>b<\/tt>;<\/li>\n<li> <tt>a &#x3C; b<\/tt>, vero se <tt>a<\/tt> &#xE8; minore di <tt>b<\/tt>;<\/li>\n<li> <tt>a &#x3E;= b<\/tt>, vero se <tt>a<\/tt> &#xE8; maggiore o uguale di <tt>b<\/tt>;<\/li>\n<li> <tt>a &#x3C;= b<\/tt>, vero se <tt>a<\/tt> &#xE8; minore o uguale a <tt>b<\/tt>;<\/li>\n<li> <tt>!a<\/tt>, vero se <tt>a<\/tt> ha come valore <i>false<\/i>.<\/li> <br>\nEsempi di variabile contenente un valore vero possono essere:\n<pre><code>var b1 = 5 &#x3E; 4;\nvar b2 = true;\nvar b3 = !false;\n<\/code><\/pre>\nEsempi di variabile che contengono un valore falso possono essere:\n<pre><code>var b4 = 3 &#x3E;= 6;\nvar b5 = false;\nvar b6 = !true;\n<\/code><\/pre>\nLe istruzioni di controllo hanno bisogno delle variabili booleane. Esistono tre istruzioni di controllo.\nLa prima &#xE8; identificata dalla parola chiave <b>if<\/b>. Eccone un esempio:\n<pre><code>var x = 0;\nif ( a === true ) {\n  var x = 1;\n}\n<\/code><\/pre>\nLa variabile <tt>x<\/tt> parte con il valore 0 al proprio interno. A questo punto se <tt>a<\/tt> &#xE8; una variabile booleana che contiene un valore vero, allora <tt>x<\/tt> prender&#xE0; il valore 1 al proprio interno; altrimenti, cio&#xE8; se <tt>a<\/tt> &#xE8; falsa, <tt>x<\/tt> non verr&#xE0; aggiornata perch&#xE9; la parte di codice all&#x27;interno delle parentesi graffe non verr&#xE0; eseguita.\nCome si pu&#xF2; notare, le istruzioni di controllo sono semafori che, in base al valore che si ha all&#x27;interno delle parentesi tonde, decidono l&#x27;andamento del codice.\nUna seconda tipologia di istruzione di controllo si basa sulle parole chiave <b>if<\/b> ed <b>else<\/b>. Eccone un esempio:\n<pre><code>var x;\nif ( a === false ) {\n  x = 1;\n} else {\n  x = 0;\n}\n<\/code><\/pre>\nQuesta istruzione descrive lo stesso meccanismo visto nell&#x27;esempio precedente: se la variabile <tt>a<\/tt> &#xE8; falsa, <tt>x<\/tt> conterr&#xE0; il valore 1; altrimenti (<i>else<\/i>, in inglese), conterr&#xE0; il valore 0.\nL&#x27;ultima istruzione di controllo da comprendere &#xE8; quella chiamata <b>if-else if<\/b>. Eccone un esempio:\n<pre><code>var x = 0;\nif ( a === false ) {\n  x = 1;\n} else if ( b &#x3E;= 4 ) {\n  x = 2;\n}\n<\/code><\/pre>\nQuesta istruzione descrive un meccanismo leggermente differente da quello visto in precedenza. Se la variabile <tt>a<\/tt> &#xE8; falsa, allora <tt>x<\/tt> conterr&#xE0; il valore 1; altrimenti, cio&#xE8; se <tt>a<\/tt> &#xE8; vera, si controlla se <tt>b<\/tt> &#xE8; maggiore o uguale di 4. Se ci&#xF2; &#xE8; vero, allora <tt>x<\/tt> conterr&#xE0; il valore 2, altrimenti, cio&#xE8; se <tt>b<\/tt> &#xE8; minore di 4, non si fa nulla.",

  "codiceLivello": "function Livello2 ( callbackFineLivello ) {\n  CoreLevel.call( this, callbackFineLivello );  \n}\n\nLivello2.prototype = Object.create( CoreLevel.prototype );\nLivello2.prototype.constructor = Livello2;\n\nLivello2.prototype.inizializzaMirino = function () {\n  this.mirino = new Mirino( this.canvas.width \/ 2, this.canvas.height \/ 2, 10.0 );\n}\n\nLivello2.prototype.inizializzaArmiNemiche = function () {  \n  var areaPertenza = this.coreGame.canvas.width;\n  var ritardoMassimo = 100 * (this.numeroOndata * 0.05);\n  var velMin = 1.0 + this.numeroOndata * 0.05;\n  var velMax = 1.2 + this.numeroOndata * 0.05;\n  var numeroMissili = 10 + Math.floor( this.numeroOndata );\n  var ritardoRand;\n  var bersagli = this.coreGame.bersagliAttaccabili();\n  \n  for( var i = 0; i < numeroMissili ; i++ ) {\n    var xRand = rand( 0, areaPertenza );\n    var velRand = rand( velMin, velMax );\n    ritardoRand = rand( 0, ritardoMassimo );\n    this.coreGame.missiliNemici.push( new MissileNemico( {\n      coloreTestata: 'yellow',\n      coloreScia: 'red',\n      massimoRaggioEsplosione: 30\n    }, bersagli, areaPertenza, xRand, velRand,  ritardoRand, this.coreGame) );\n  }\n}\n\nLivello2.prototype.inizializzaTorrette = function () {\n  var nMissili = 10;\n  var nSoldati = 10;\n  var Tmin = 50;\n  var Tmax = 1000;\n  var deltaTempo = 70;\n  var deltaRaffreddamento = 3;\n  \n  var coloreMissili0 = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n  coloreMissili0[ rand( 0, 9 ) ] = 'red';\n  coloreMissili0[ rand( 0, 9 ) ] = '#33CCFF';\n  coloreMissili0[ rand( 0, 9 ) ] = 'red';\n  coloreMissili0[ rand( 0, 9 ) ] = '#33CCFF';       \n  coloreMissili0[ rand( 0, 9 ) ] = 'red';\n  this.coreGame.aggiungiBatteriaAntimissile(\n    new BatteriaAntimissile ( 35, 410, nMissili, nSoldati, coloreMissili0, Tmin, Tmax, deltaTempo, deltaRaffreddamento, this.coreGame )\n  );\n  \n  coloreMissili1 = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n  coloreMissili1[ rand( 0, 9 ) ] = 'red';\n  coloreMissili1[ rand( 0, 9 ) ] = '#33CCFF';\n  coloreMissili1[ rand( 0, 9 ) ] = 'red';\n  coloreMissili1[ rand( 0, 9 ) ] = '#33CCFF';       \n  coloreMissili1[ rand( 0, 9 ) ] = 'red';\n  this.coreGame.aggiungiBatteriaAntimissile(\n    new BatteriaAntimissile ( 255, 410, nMissili, nSoldati, coloreMissili1, Tmin, Tmax, deltaTempo, deltaRaffreddamento, this.coreGame )\n  );\n  \n  var coloreMissili2 = [ 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'];\n  coloreMissili2[ rand( 0, 9 ) ] = 'red';\n  coloreMissili2[ rand( 0, 9 ) ] = '#33CCFF';\n  coloreMissili2[ rand( 0, 9 ) ] = 'red';\n  coloreMissili2[ rand( 0, 9 ) ] = '#33CCFF';       \n  coloreMissili2[ rand( 0, 9 ) ] = 'red';\n  this.coreGame.aggiungiBatteriaAntimissile(\n    new BatteriaAntimissile ( 475, 410, nMissili, nSoldati, coloreMissili2, Tmin, Tmax, deltaTempo, deltaRaffreddamento, this.coreGame )\n  );\n};\n\nLivello2.prototype.sparo = function ( x, y, tasto ) {\n  var indiceTorretta = this.scegliTorretta( x, y, tasto);\n   if( indiceTorretta === -1 )\n    return;\n  var torretta = this.coreGame.batterieAntimissile[ indiceTorretta ];\n  \n  var raggio = 30;\n  var xModificata = x;\n  var yModificata = y;\n  if ( controlloPermessiCalibrazione() === false || controlloConfigurazioneParametriPianeti() === false ) {\n    xModificata += rand( -raggio, raggio );\n    yModificata += rand( -raggio, raggio );\n  }\n  \n  var vel = 0;\n  var incrementoTemperatura = 150;\n  var coloreScia = 'blue';\n  var raggioEsplosione = 2;\n  if( torretta.tipoMunizioni[ torretta.numeroMissili - 1 ] === 'blue' ) { \n    vel = 7; coloreScia = 'blue'; raggioEsplosione = 20; \n  }\n  if( torretta.tipoMunizioni[ torretta.numeroMissili - 1 ] === 'red' ) { \n    vel = 8; coloreScia = 'red'; raggioEsplosione = 2; \n  }\n  if( torretta.tipoMunizioni[ torretta.numeroMissili - 1 ] === '#33CCFF' ) { \n    vel = 0.5; coloreScia = '#33CCFF'; raggioEsplosione = 30; \n  }\n  \n  this.coreGame.missiliTerrestri.push( new MissileTerrestre( {\n    xDiPartenza: torretta.x,\n    yDiPartenza: torretta.y,\n    xDiArrivo: xModificata,\n    yDiArrivo: yModificata,\n    coloreTestata: 'yellow',\n    coloreScia: coloreScia,\n    massimoRaggioEsplosione: raggioEsplosione,\n    distanzaPerFrame: vel\n  }, this.coreGame ) );\n  this.coreGame.aggiornaPunteggioMissiliSparati();\n  torretta.numeroMissili--;\n  torretta.temperatura += incrementoTemperatura;\n}\n\nLivello2.prototype.calcolaCoefficienteOndata = function () {\n  return this.numeroOndata * 1.2;\n}\n\n\/\/ interfaccia test - codice utente\n\nvar controlloPermessiCalibrazione = function () {\n  var risultato = sbloccoPermessiCalibrazione();\n  if (\n    risultato[ 0 ] === true\n    && risultato[ 1 ] === true\n    && risultato[ 2 ] === 2\n  ) {\n    console.log(\"Permessi di calibrazione mira sbloccati.\\n Procedere al sistema di configurazione planetario.\");\n    return true;\n  } else {\n    console.log(\n      \"Sblocco Calibrazione: \" + risultato[ 0 ]\n      + \"Accesso Configurazione Pianeti: \" + risultato[ 1 ]\n      + \"Codice Pianeta: \" + risultato[ 2 ]\n      + \"Informazioni non corrette.\"\n    );\n    return false;\n  } \n}\n\nvar controlloConfigurazioneParametriPianeti = function () {\n  var risultato = configurazioneParametriPianeti();\n  var nome = risultato[ 0 ];\n  var grav = risultato[ 1 ];\n  var vento = risultato[ 2 ];\n  var atmosfera = risultato[ 3 ];\n  var settore = risultato[ 4 ];\n  \n  if (\n    nome === \"Bastiani\"\n    && grav === 4.2\n    && vento === 23\n    && atmosfera === \"respirabile\"\n    && settore === 7\n  ) {\n    console.log(\"Configurazione sistema antimissile... Pianeta Bastiani. Informazioni aggiornate correttamente.\\nBuon proseguimento con il sistema Hob-2000.\");\n    return true;\n  } else {\n    console.log(\n      \"Nome pianeta: \" + nome\n      + \"Forza Gravitazionale: \" + grav\n      + \"Vento: \" + vento\n      + \"Atmosfera: \" + atmosfera\n      + \"Settore Galattico: \" + settore\n      + \"Informazioni non corrette.\"\n    );\n    return false;\n  }\n}",

  "fileVirtuali":
  [
    {"nomeFile": "PermessiCalibrazione.js",
    "consultazione": false,
    "codice": "\/**********\nBenvenuto nel file di sblocco dei permessi di calibrazione.\nIl seguente file permette di sbloccare ed accedere alle funzionalit\u00e0\ndi configurazione planetaria, fondamentiali per la corretta impostazione\ndelle armi.\n**********\/\n\n\/\/ Variabile contenente il codice del pianeta su cui si trovano le armi.\nvar _codicePianeta;\n\n\/\/ Codice per lo sblocco dei permessi di calibrazione,\n\/\/ contenente anche lo sblocco di configurazione planetaria.\n\/\/ Attenzione! Senza lo sblocco della calibrazione attiva,\n\/\/ non sar\u00e0 possibile attivare la configurazione planetaria.\nvar sbloccoPermessiCalibrazione = function () {\n\/\/###START_MODIFICABILE###\n  \/\/ Variabile di sblocco del sistema di calibrazione.\n  var sbloccoCalibrazione = false;\n\/\/###END_MODIFICABILE###\n  var accessoConfigurazionePianeti = false;\n  \/\/ Variabili contenenti i codici planetari.\n  var codiceTerra = 1;\n  var codiceBastiani = 2;\n  var codiceColombre = 3;\n  var codiceButtafuoco = 4;\n  var codiceBarnabo = 5;\n  var codiceBuzzati = 6;\n  \n  if ( sbloccoCalibrazione === true ) {\n    accessoConfigurazionePianeti = true;\n  }\n\/\/###START_MODIFICABILE###\n  \/\/ Attenzione! Modificare solo se il pianeta desiderato non \u00e8 quello di default.\n  if ( accessoConfigurazionePianeti === true ) {\n\/\/###END_MODIFICABILE###\n    _codicePianeta = codiceTerra;\n  } else {\n    \/\/ Assegnare alla variabile il codice del pianeta desiderato.\n    _codicePianeta = codiceBastiani;\n  }\n  \n  return [sbloccoCalibrazione, accessoConfigurazionePianeti, _codicePianeta]\n}",
    "test": "(function () {\n  var risultato = sbloccoPermessiCalibrazione();\n  if (\n    risultato[ 0 ] === true\n    && risultato[ 1 ] === true\n    && risultato[ 2 ] === 2\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}) ();",
    "descrizione": "L&#x27;obiettivo &#xE8; quello di sbloccare la calibrazione del mirino.<br>\nCome prima cosa sar&#xE0; dunque necessario rendere vera la variabile <tt>sbloccoCalibrazione<\/tt>.<br>\nFatto questo &#xE8; necessario modificare la condizione del secondo <i>if<\/i>, in modo tale da entrare nella parte di codice raggiungibile dall&#x27;<i>else<\/i>: in questo modo viene impostata correttamente la variabile <tt>_codicePianeta<\/tt>.",
    "aiuto": "Come prima cosa &#xE8; necessario rendere vera la variabile <tt>sbloccoCalibrazione<\/tt>, nel seguente modo:\n<pre><code>var sbloccoCalibrazione = true;\n<\/code><\/pre>\nIl secondo passo prevede di cambiare la condizione dell&#x27;<i>if<\/i>, rendedola come segue:\n<pre><code>if ( accessoConfigurazionePianeti === false )\n<\/code><\/pre>",
    "messaggioFallimento": "Permessi non sbloccati."},
    {"nomeFile": "ConfigPlanetaria.js",
    "consultazione": false,
    "codice": "\/**********\nBenvenuto nel file di configurazione planetaria del sistema Hob-2000.\nTroverai in elenco le caratteristiche di ogni pianeta,\nnecessarie per il corretto funzionamento del sistema stesso.\nOgni pianeta ha cinque caratteristiche: il nome, la forza gravitazionale,\nil vento, l'atmosfera e il settore galattico.\nTali caratteristiche influiscono pesantemente sulle capacit\u00e0 di sparo,\nrendendo potenzialmente inutilizzabili le armi se configurate per il pianeta errato.\n**********\/\n\nvar configurazioneParametriPianeti = function () {\n  var nomePianeta;\n  var forzaGravitazionale;\n  var vento;\n  var atmosfera;\n  var settoreGalattico;\n  \n\/\/###START_MODIFICABILE###\n  if ( _codicePianeta === 1 ) {\n    nomePianeta = \"Terra\";\n    forzaGravitazionale = 1;\n    vento = 1;\n    atmosfera = \"respirabile\";\n    settoreGalattico = 0;\n  } else if ( _codicePianeta === 2 ) {\n    nomePianeta = \"Buzzati\";\n    forzaGravitazionale = 2;\n    vento = 19.06;\n    atmosfera = \"respirabile\";\n    settoreGalattico = 5;\n  } else if ( _codicePianeta === 3 ) {\n    nomePianeta = \"Colombre\";\n    forzaGravitazionale = 0.5;\n    vento = 0.7;\n    atmosfera = \"non_respirabile\";\n    settoreGalattico = 6;\n  } else if ( _codicePianeta === 4 ) {\n    nomePianeta = \"Buttafuoco\";\n    forzaGravitazionale = 4.5;\n    vento = 80;\n    atmosfera = \"non_respirabile\";\n    settoreGalattico = 3;\n  } else if ( _codicePianeta === 5 ) {\n    nomePianeta = \"Barnabo\";\n    forzaGravitazionale = 13;\n    vento = 0;\n    atmosfera = \"parzialmente_respirabile\";\n    settoreGalattico = 1;\n  } else if ( _codicePianeta === 6 ) {\n    nomePianeta = \"Bastiani\";\n    forzaGravitazionale = 4.2;\n    vento = 23;\n    atmosfera = \"respirabile\";\n    settoreGalattico = 7;\n\/\/###END_MODIFICABILE###\n    \/\/ \/\\\/\\\/\\ \u00a3Nos****Kn\u00a3$%BsorJOJSONHbooooooLK666dbw**\n    \/\/ **&fgHJS666&78765&4%4$$L\u00a3sC&GSTntadjr \/\\\/\\\/\\\n  } else if ( _codicePianeta === \"00110111\" ) {\n    nomePianeta = \"01000001 01101110 01100111 01110101 01110011 01110100 01101001 01101110 01100001\";\n    forzaGravitazionale = \"00110010 00101110 00110011\";\n    vento = \"01101110 01101111 01101110 01011111 01110000 01110010 01100101 01110011 01100101 01101110 01110100 01100101\";\n    atmosfera = \"01110010 01100101 01110011 01110000 01101001 01110010 01100001 01100010 01101001 01101100 01100101\";\n    settoreGalattico = \"00111000\";\n  }\n  \n  return [nomePianeta, forzaGravitazionale, vento, atmosfera, settoreGalattico];\n}",
    "test": "(function () {\n  var risultato = configurazioneParametriPianeti();\n  if (\n    risultato[ 0 ] === \"Bastiani\"\n    && risultato[ 1 ] === 4.2\n    && risultato[ 2 ] === 23\n    && risultato[ 3 ] === \"respirabile\"\n    && risultato[ 4 ] === 7\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}) ();",
    "descrizione": "L&#x27;obiettivo &#xE8; quello di modificare correttamente il grosso blocco di istruzioni <i>if-else if<\/i>, in modo che venga eseguito il codice corretto per il pianeta Bastiani.",
    "aiuto": "Per avere la corretta configurazione di puntamento e sparo &#xE8; necessario entrare nel corretto pezzo del blocco di istruzioni <i>if-else if<\/i>: il modo migliore &#xE8; quello di sostituire il codice del pianeta con 6, dunque inserire prima del primo <i>if<\/i> la seguente istruzione:\n<pre><code>_codicePianeta = 6;\n<\/code><\/pre>",
    "messaggioFallimento": "Configurazione planetaria non corretta."}
  ]
}